{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Products/product-details-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Edit, Package, Tag, BarChart, ShoppingCart, Clock, Truck, Download, Share2, DollarSign } from \"lucide-react\"\r\nimport type { ProductFormValues } from \"../../services/product-form-schema\"\r\n\r\ninterface ProductDetailsDialogProps {\r\n  product: ProductFormValues & { id: string }\r\n  open: boolean\r\n  onOpenChange: (open: boolean) => void\r\n  onEdit?: (product: ProductFormValues & { id: string }) => void\r\n}\r\n\r\n// Generate mock sales data\r\nconst generateSalesData = (stock: number) => {\r\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"]\r\n  return months.map((month) => {\r\n    const baseSales = Math.max(5, Math.floor(stock / 10))\r\n    const randomVariation = Math.floor(Math.random() * 10) - 5\r\n    return {\r\n      month,\r\n      sales: Math.max(1, baseSales + randomVariation),\r\n    }\r\n  })\r\n}\r\n\r\n// Generate mock inventory history\r\nconst generateInventoryHistory = (stock: number) => {\r\n  const today = new Date()\r\n  const history = []\r\n\r\n  history.push({\r\n    date: today.toISOString().split(\"T\")[0],\r\n    action: \"Current stock\",\r\n    quantity: stock,\r\n    location: \"Main Warehouse\",\r\n  })\r\n\r\n  // Add some historical entries\r\n  for (let i = 1; i <= 3; i++) {\r\n    const date = new Date(today)\r\n    date.setDate(date.getDate() - i * 7)\r\n\r\n    history.push({\r\n      date: date.toISOString().split(\"T\")[0],\r\n      action: i % 2 === 0 ? \"Stock adjustment\" : \"Restock\",\r\n      quantity: i % 2 === 0 ? -Math.floor(Math.random() * 5) : Math.floor(Math.random() * 20) + 10,\r\n      location: \"Main Warehouse\",\r\n      order: i % 2 === 0 ? undefined : `PO-${1000 + i}`,\r\n    })\r\n  }\r\n\r\n  return history\r\n}\r\n\r\n// Generate mock recent orders\r\nconst generateRecentOrders = () => {\r\n  const today = new Date()\r\n  const orders = []\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    const date = new Date(today)\r\n    date.setDate(date.getDate() - i * 2)\r\n\r\n    orders.push({\r\n      id: `ORD-${String(1001 + i).padStart(4, \"0\")}`,\r\n      date: date.toISOString().split(\"T\")[0],\r\n      quantity: Math.floor(Math.random() * 3) + 1,\r\n      customer: `Customer ${i + 1}`,\r\n      status: i === 0 ? \"Processing\" : i === 1 ? \"Shipped\" : \"Delivered\",\r\n    })\r\n  }\r\n\r\n  return orders\r\n}\r\n\r\n// Generate mock sales statistics\r\nconst generateSalesStatistics = (price: number, stock: number) => {\r\n  const totalSold = Math.max(20, stock * 2)\r\n  const totalRevenue = totalSold * price\r\n  const avgRating = (3.5 + Math.random() * 1.5).toFixed(1)\r\n  const conversionRate = (Math.random() * 5 + 2).toFixed(1)\r\n\r\n  return {\r\n    totalSold,\r\n    totalRevenue,\r\n    avgRating,\r\n    conversionRate,\r\n  }\r\n}\r\n\r\nexport function ProductDetailsDialog({ product, open, onOpenChange, onEdit }: ProductDetailsDialogProps) {\r\n  const [salesData, setSalesData] = useState<any[]>([])\r\n  const [inventoryHistory, setInventoryHistory] = useState<any[]>([])\r\n  const [recentOrders, setRecentOrders] = useState<any[]>([])\r\n  const [salesStatistics, setSalesStatistics] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n    if (open && product) {\r\n      setSalesData(generateSalesData(product.inventory?.quantity || 0))\r\n      setInventoryHistory(generateInventoryHistory(product.inventory?.quantity || 0))\r\n      setRecentOrders(generateRecentOrders())\r\n      setSalesStatistics(generateSalesStatistics(product.price, product.inventory?.quantity || 0))\r\n    }\r\n  }, [open, product])\r\n\r\n  const getStockStatus = (quantity: number, lowThreshold = 10) => {\r\n    if (quantity === 0) return { status: \"out-of-stock\", label: \"Out of Stock\", color: \"bg-red-100 text-red-800\" }\r\n    if (quantity <= lowThreshold)\r\n      return { status: \"low-stock\", label: \"Low Stock\", color: \"bg-yellow-100 text-yellow-800\" }\r\n    return { status: \"in-stock\", label: \"In Stock\", color: \"bg-green-100 text-green-800\" }\r\n  }\r\n\r\n  const stockStatus = getStockStatus(product.inventory?.quantity || 0, product.inventory?.lowStockThreshold || 10)\r\n\r\n  // Calculate warehouse distribution\r\n  const warehouseDistribution = [\r\n    { name: \"Main Warehouse\", location: \"New York\", stock: Math.max(0, (product.inventory?.quantity || 0) - 5) },\r\n    { name: \"East Warehouse\", location: \"Boston\", stock: Math.min(3, product.inventory?.quantity || 0) },\r\n    { name: \"Store Front\", location: \"Manhattan\", stock: Math.min(2, product.inventory?.quantity || 0) },\r\n  ]\r\n\r\n  if (!product) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"sm:max-w-[900px] max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\r\n            <div>\r\n              <DialogTitle className=\"text-xl\">{product.name}</DialogTitle>\r\n              <DialogDescription>\r\n                SKU: {product.sku} â€¢ ID: {product.id}\r\n              </DialogDescription>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Button size=\"sm\" variant=\"outline\" className=\"gap-2\">\r\n                <Download className=\"h-4 w-4\" />\r\n                Export\r\n              </Button>\r\n              <Button size=\"sm\" variant=\"outline\" className=\"gap-2\">\r\n                <Share2 className=\"h-4 w-4\" />\r\n                Share\r\n              </Button>\r\n              <Button size=\"sm\" className=\"gap-2\" onClick={() => onEdit && onEdit(product)}>\r\n                <Edit className=\"h-4 w-4\" />\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <Tabs defaultValue=\"details\" className=\"mt-2\">\r\n          <TabsList className=\"grid grid-cols-3 mb-4\">\r\n            <TabsTrigger value=\"details\">Details</TabsTrigger>\r\n            <TabsTrigger value=\"inventory\">Inventory</TabsTrigger>\r\n            <TabsTrigger value=\"sales\">Sales</TabsTrigger>\r\n          </TabsList>\r\n\r\n          {/* Details Tab */}\r\n          <TabsContent value=\"details\" className=\"space-y-4\">\r\n            <div className=\"flex flex-col lg:flex-row gap-4\">\r\n              <div className=\"lg:w-1/3\">\r\n                <div className=\"relative h-48 w-full overflow-hidden rounded-md border bg-gray-100\">\r\n                  {product.images && product.images.length > 0 ? (\r\n                    <img\r\n                      src={product.images[0]?.url || \"/placeholder.svg?height=200&width=200\"}\r\n                      alt={product.name}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"w-full h-full flex items-center justify-center text-gray-400\">\r\n                      <Package className=\"h-12 w-12\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {product.images && product.images.length > 1 && (\r\n                  <div className=\"flex gap-2 mt-2 overflow-x-auto\">\r\n                    {product.images.slice(1, 4).map((image, index) => (\r\n                      <div key={index} className=\"relative h-16 w-16 flex-shrink-0 overflow-hidden rounded border\">\r\n                        <img\r\n                          src={image.url || \"/placeholder.svg\"}\r\n                          alt={`${product.name} ${index + 2}`}\r\n                          className=\"w-full h-full object-cover\"\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                    {product.images.length > 4 && (\r\n                      <div className=\"h-16 w-16 flex-shrink-0 rounded border bg-gray-100 flex items-center justify-center text-xs text-gray-500\">\r\n                        +{product.images.length - 4}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"lg:w-2/3 space-y-4\">\r\n                <Card>\r\n                  <CardHeader className=\"pb-2\">\r\n                    <CardTitle className=\"text-base\">Product Information</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm font-medium\">Category:</span>\r\n                          <span className=\"text-sm\">{product.categories?.join(\", \") || \"N/A\"}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm font-medium\">Brand:</span>\r\n                          <span className=\"text-sm\">{product.brand || \"N/A\"}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm font-medium\">Status:</span>\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {product.status || \"draft\"}\r\n                          </Badge>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm font-medium\">Visibility:</span>\r\n                          <span className=\"text-sm\">{product.visibility || \"visible\"}</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm font-medium\">Price:</span>\r\n                          <span className=\"text-sm font-semibold\">${product.price}</span>\r\n                        </div>\r\n                        {product.compareAtPrice && (\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-sm font-medium\">Compare at:</span>\r\n                            <span className=\"text-sm line-through text-gray-500\">${product.compareAtPrice}</span>\r\n                          </div>\r\n                        )}\r\n                        {product.discount && (\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-sm font-medium\">Discount:</span>\r\n                            <span className=\"text-sm text-green-600\">{product.discount}% off</span>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm font-medium\">Taxable:</span>\r\n                          <span className=\"text-sm\">{product.taxable ? \"Yes\" : \"No\"}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader className=\"pb-2\">\r\n                    <CardTitle className=\"text-base\">Description</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p className=\"text-sm\">\r\n                      {product.fullDescription || product.shortDescription || \"No description available.\"}\r\n                    </p>\r\n                    {product.features && product.features.length > 0 && (\r\n                      <div className=\"mt-3\">\r\n                        <h4 className=\"text-sm font-medium mb-2\">Features:</h4>\r\n                        <ul className=\"text-sm space-y-1\">\r\n                          {product.features.map((feature, index) => (\r\n                            <li key={index} className=\"flex items-start\">\r\n                              <span className=\"mr-2\">â€¢</span>\r\n                              <span>{feature}</span>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <Card>\r\n                <CardHeader className=\"pb-2\">\r\n                  <CardTitle className=\"text-base flex items-center\">\r\n                    <Tag className=\"mr-2 h-4 w-4 text-primary\" />\r\n                    Tags\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {product.tags && product.tags.length > 0 ? (\r\n                      product.tags.map((tag: string) => (\r\n                        <Badge key={tag} variant=\"secondary\">\r\n                          {tag}\r\n                        </Badge>\r\n                      ))\r\n                    ) : (\r\n                      <span className=\"text-sm text-muted-foreground\">No tags</span>\r\n                    )}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader className=\"pb-2\">\r\n                  <CardTitle className=\"text-base flex items-center\">\r\n                    <Truck className=\"mr-2 h-4 w-4 text-primary\" />\r\n                    Shipping\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm font-medium\">Weight:</span>\r\n                    <span className=\"text-sm\">\r\n                      {product.shipping?.weight ? `${product.shipping.weight} ${product.shipping.weightUnit}` : \"N/A\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm font-medium\">Dimensions:</span>\r\n                    <span className=\"text-sm\">\r\n                      {product.shipping?.dimensions?.length &&\r\n                      product.shipping?.dimensions?.width &&\r\n                      product.shipping?.dimensions?.height\r\n                        ? `${product.shipping.dimensions.length} Ã— ${product.shipping.dimensions.width} Ã— ${product.shipping.dimensions.height} ${product.shipping.dimensions.unit}`\r\n                        : \"N/A\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm font-medium\">Free shipping:</span>\r\n                    <span className=\"text-sm\">{product.shipping?.freeShipping ? \"Yes\" : \"No\"}</span>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          {/* Inventory Tab */}\r\n          <TabsContent value=\"inventory\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <Card>\r\n                <CardHeader className=\"pb-2\">\r\n                  <CardTitle className=\"text-base flex items-center\">\r\n                    <Package className=\"mr-2 h-4 w-4 text-primary\" />\r\n                    Inventory Status\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"flex flex-col items-center p-6 bg-primary/10 rounded-md\">\r\n                    <span className=\"text-4xl font-bold\">{product.inventory?.quantity || 0}</span>\r\n                    <span className=\"text-sm text-muted-foreground\">Units in Stock</span>\r\n                    <Badge variant=\"outline\" className={`mt-2 ${stockStatus.color}`}>\r\n                      {stockStatus.label}\r\n                    </Badge>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm font-medium\">Low Stock Threshold:</span>\r\n                      <span className=\"text-sm\">{product.inventory?.lowStockThreshold || 10} units</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm font-medium\">Track Inventory:</span>\r\n                      <span className=\"text-sm\">{product.inventory?.trackInventory ? \"Yes\" : \"No\"}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm font-medium\">Backorders:</span>\r\n                      <span className=\"text-sm\">{product.inventory?.allowBackorders ? \"Allowed\" : \"Not allowed\"}</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader className=\"pb-2\">\r\n                  <CardTitle className=\"text-base flex items-center\">\r\n                    <Truck className=\"mr-2 h-4 w-4 text-primary\" />\r\n                    Warehouse Distribution\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    {warehouseDistribution.map((warehouse, index) => (\r\n                      <div\r\n                        key={warehouse.name}\r\n                        className=\"flex justify-between items-center border-b pb-2 last:border-0 last:pb-0\"\r\n                      >\r\n                        <div>\r\n                          <div className=\"font-medium text-sm\">{warehouse.name}</div>\r\n                          <div className=\"text-xs text-muted-foreground\">{warehouse.location}</div>\r\n                        </div>\r\n                        <Badge variant=\"outline\">{warehouse.stock} units</Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <Card className=\"mt-4\">\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle className=\"text-base flex items-center\">\r\n                  <Clock className=\"mr-2 h-4 w-4 text-primary\" />\r\n                  Inventory History\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {inventoryHistory.map((item, index) => (\r\n                    <div key={index} className=\"flex gap-3\">\r\n                      <div className=\"relative mt-1\">\r\n                        <div className=\"h-2 w-2 rounded-full bg-primary\"></div>\r\n                        {index < inventoryHistory.length - 1 && (\r\n                          <div className=\"absolute top-2 bottom-0 left-1/2 -translate-x-1/2 w-0.5 h-full bg-border\"></div>\r\n                        )}\r\n                      </div>\r\n                      <div className={index < inventoryHistory.length - 1 ? \"pb-4\" : \"\"}>\r\n                        <div className=\"text-sm font-medium\">\r\n                          {item.action}: {item.quantity > 0 ? \"+\" : \"\"}\r\n                          {item.quantity} units\r\n                          {item.order && ` (${item.order})`}\r\n                        </div>\r\n                        <div className=\"text-xs text-muted-foreground\">\r\n                          {item.date} â€¢ {item.location}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          {/* Sales Tab */}\r\n          <TabsContent value=\"sales\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <Card>\r\n                <CardHeader className=\"pb-2\">\r\n                  <CardTitle className=\"text-base flex items-center\">\r\n                    <BarChart className=\"mr-2 h-4 w-4 text-primary\" />\r\n                    Sales Overview\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"h-[200px] flex items-end justify-between gap-2 pt-4\">\r\n                    {salesData.map((item) => (\r\n                      <div key={item.month} className=\"flex flex-col items-center gap-2\">\r\n                        <div\r\n                          className=\"w-12 bg-primary/80 rounded-t-md\"\r\n                          style={{ height: `${Math.max(item.sales * 6, 10)}px` }}\r\n                        ></div>\r\n                        <div className=\"flex flex-col items-center\">\r\n                          <span className=\"text-xs\">{item.month}</span>\r\n                          <span className=\"text-xs font-medium\">{item.sales}</span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader className=\"pb-2\">\r\n                  <CardTitle className=\"text-base flex items-center\">\r\n                    <ShoppingCart className=\"mr-2 h-4 w-4 text-primary\" />\r\n                    Recent Orders\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-3\">\r\n                    {recentOrders.map((order, index) => (\r\n                      <div\r\n                        key={order.id}\r\n                        className=\"flex justify-between items-center border-b pb-2 last:border-0 last:pb-0\"\r\n                      >\r\n                        <div>\r\n                          <div className=\"font-medium text-sm\">{order.id}</div>\r\n                          <div className=\"text-xs text-muted-foreground\">{order.date}</div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {order.quantity} unit{order.quantity > 1 ? \"s\" : \"\"}\r\n                          </Badge>\r\n                          <div className=\"text-xs text-muted-foreground mt-1\">{order.status}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <Card className=\"mt-4\">\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle className=\"text-base flex items-center\">\r\n                  <DollarSign className=\"mr-2 h-4 w-4 text-primary\" />\r\n                  Sales Statistics\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  <div className=\"flex flex-col items-center p-4 bg-primary/10 rounded-md\">\r\n                    <span className=\"text-2xl font-bold\">{salesStatistics?.totalSold || 0}</span>\r\n                    <span className=\"text-sm text-muted-foreground text-center\">Total Units Sold</span>\r\n                  </div>\r\n                  <div className=\"flex flex-col items-center p-4 bg-primary/10 rounded-md\">\r\n                    <span className=\"text-2xl font-bold\">${salesStatistics?.totalRevenue?.toLocaleString() || 0}</span>\r\n                    <span className=\"text-sm text-muted-foreground text-center\">Total Revenue</span>\r\n                  </div>\r\n                  <div className=\"flex flex-col items-center p-4 bg-primary/10 rounded-md\">\r\n                    <span className=\"text-2xl font-bold\">{salesStatistics?.avgRating || 0}/5</span>\r\n                    <span className=\"text-sm text-muted-foreground text-center\">Average Rating</span>\r\n                  </div>\r\n                  <div className=\"flex flex-col items-center p-4 bg-primary/10 rounded-md\">\r\n                    <span className=\"text-2xl font-bold\">{salesStatistics?.conversionRate || 0}%</span>\r\n                    <span className=\"text-sm text-muted-foreground text-center\">Conversion Rate</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n\r\n        <DialogFooter>\r\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\r\n            Close\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}