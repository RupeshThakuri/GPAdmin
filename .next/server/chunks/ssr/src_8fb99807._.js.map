{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Dashboard/dashboard-header.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\ninterface DashboardHeaderProps {\r\n  heading: string\r\n  text?: string\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport function DashboardHeader({ heading, text, children }: Readonly<DashboardHeaderProps>) {\r\n  return (\r\n    <div className=\"flex items-center justify-between px-2 pb-4 border-b border-primary/20 mb-6\">\r\n      <div className=\"grid gap-1\">\r\n        <h1 className=\"font-heading text-3xl md:text-4xl\">{heading}</h1>\r\n        {text && <p className=\"text-lg text-muted-foreground\">{text}</p>}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AASO,SAAS,gBAAgB,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAkC;IACzF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;oBAClD,sBAAQ,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;;;YAExD;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Dashboard/dashboard-shell.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\ninterface DashboardShellProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function DashboardShell({ children }: Readonly<DashboardShellProps>) {\r\n  return <div className=\"flex flex-col gap-6\">{children}</div>\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAOO,SAAS,eAAe,EAAE,QAAQ,EAAiC;IACxE,qBAAO,8OAAC;QAAI,WAAU;kBAAuB;;;;;;AAC/C","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  ControllerProps,\r\n  FieldPath,\r\n  FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message) : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Textarea = React.forwardRef<\r\n  HTMLTextAreaElement,\r\n  React.ComponentProps<\"textarea\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))\r\nSwitch.displayName = SwitchPrimitives.Root.displayName\r\n\r\nexport { Switch }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/badge.tsx"],"sourcesContent":["import type * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  },\r\n)\r\n\r\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAKF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBAAO,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC7E","debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return <RadioGroupPrimitive.Root className={cn(\"grid gap-2\", className)} {...props} ref={ref} />\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <div className=\"h-2.5 w-2.5 rounded-full bg-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBAAO,8OAAC,0KAAA,CAAA,OAAwB;QAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAAa,GAAG,KAAK;QAAE,KAAK;;;;;;AAC3F;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;;;;;;AAIvB;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 858, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\n// Inspired by react-hot-toast library\r\nimport * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n"],"names":[],"mappings":";;;;;AAEA,sCAAsC;AACtC;AAHA;;AAUA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAS3B,MAAM,cAAc;IAClB,WAAW;IACX,cAAc;IACd,eAAe;IACf,cAAc;AAChB;AAEA,IAAI,QAAQ;AAEZ,SAAS;IACP,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,gBAAgB;IAC7C,OAAO,MAAM,QAAQ;AACvB;AA0BA,MAAM,gBAAgB,IAAI;AAE1B,MAAM,mBAAmB,CAAC;IACxB,IAAI,cAAc,GAAG,CAAC,UAAU;QAC9B;IACF;IAEA,MAAM,UAAU,WAAW;QACzB,cAAc,MAAM,CAAC;QACrB,SAAS;YACP,MAAM;YACN,SAAS;QACX;IACF,GAAG;IAEH,cAAc,GAAG,CAAC,SAAS;AAC7B;AAEO,MAAM,UAAU,CAAC,OAAc;IACpC,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ;oBAAC,OAAO,KAAK;uBAAK,MAAM,MAAM;iBAAC,CAAC,KAAK,CAAC,GAAG;YACnD;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,GAAG;wBAAE,GAAG,CAAC;wBAAE,GAAG,OAAO,KAAK;oBAAC,IAAI;YAE3D;QAEF,KAAK;YAAiB;gBACpB,MAAM,EAAE,OAAO,EAAE,GAAG;gBAEpB,2EAA2E;gBAC3E,uCAAuC;gBACvC,IAAI,SAAS;oBACX,iBAAiB;gBACnB,OAAO;oBACL,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;wBACpB,iBAAiB,MAAM,EAAE;oBAC3B;gBACF;gBAEA,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,WAAW,YAAY,YAC5B;4BACE,GAAG,CAAC;4BACJ,MAAM;wBACR,IACA;gBAER;YACF;QACA,KAAK;YACH,IAAI,OAAO,OAAO,KAAK,WAAW;gBAChC,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,EAAE;gBACZ;YACF;YACA,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,OAAO;YAC5D;IACJ;AACF;AAEA,MAAM,YAA2C,EAAE;AAEnD,IAAI,cAAqB;IAAE,QAAQ,EAAE;AAAC;AAEtC,SAAS,SAAS,MAAc;IAC9B,cAAc,QAAQ,aAAa;IACnC,UAAU,OAAO,CAAC,CAAC;QACjB,SAAS;IACX;AACF;AAIA,SAAS,MAAM,EAAE,GAAG,OAAc;IAChC,MAAM,KAAK;IAEX,MAAM,SAAS,CAAC,QACd,SAAS;YACP,MAAM;YACN,OAAO;gBAAE,GAAG,KAAK;gBAAE;YAAG;QACxB;IACF,MAAM,UAAU,IAAM,SAAS;YAAE,MAAM;YAAiB,SAAS;QAAG;IAEpE,SAAS;QACP,MAAM;QACN,OAAO;YACL,GAAG,KAAK;YACR;YACA,MAAM;YACN,cAAc,CAAC;gBACb,IAAI,CAAC,MAAM;YACb;QACF;IACF;IAEA,OAAO;QACL,IAAI;QACJ;QACA;IACF;AACF;AAEA,SAAS;IACP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAS;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,UAAU,IAAI,CAAC;QACf,OAAO;YACL,MAAM,QAAQ,UAAU,OAAO,CAAC;YAChC,IAAI,QAAQ,CAAC,GAAG;gBACd,UAAU,MAAM,CAAC,OAAO;YAC1B;QACF;IACF,GAAG;QAAC;KAAM;IAEV,OAAO;QACL,GAAG,KAAK;QACR;QACA,SAAS,CAAC,UAAqB,SAAS;gBAAE,MAAM;gBAAiB;YAAQ;IAC3E;AACF","debugId":null}},
    {"offset": {"line": 1014, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)} {...props} />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EAAE,SAAS,EAAE,GAAG,OAA6C,iBACjF,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QAAa,GAAG,KAAK;;;;;;AAEhG,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EAAE,SAAS,EAAE,GAAG,OAA6C,iBACjF,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iEAAiE;QAAa,GAAG,KAAK;;;;;;AAE3G,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qDAAqD;QAClE,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAE7G,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1117, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/services/api-service.ts"],"sourcesContent":["const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8000/api\"\r\n\r\n// Create a proper fetch wrapper that handles errors correctly\r\nconst apiRequest = async (url: string, options: RequestInit = {}) => {\r\n  const fullUrl = url.startsWith(\"http\") ? url : `${API_BASE_URL}${url}`\r\n\r\n  try {\r\n    const response = await fetch(fullUrl, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    })\r\n\r\n    // Check if response is ok\r\n    if (!response.ok) {\r\n      // Try to get error message from response\r\n      let errorMessage = `HTTP error! status: ${response.status}`\r\n      try {\r\n        const errorData = await response.json()\r\n        errorMessage = errorData.detail || errorData.error || errorMessage\r\n      } catch {\r\n        // If response is not JSON, use status text\r\n        errorMessage = response.statusText || errorMessage\r\n      }\r\n      throw new Error(errorMessage)\r\n    }\r\n\r\n    // Check if response is JSON\r\n    const contentType = response.headers.get(\"content-type\")\r\n    if (contentType && contentType.includes(\"application/json\")) {\r\n      return await response.json()\r\n    } else {\r\n      throw new Error(\"Response is not JSON\")\r\n    }\r\n  } catch (error) {\r\n    console.error(\"API Request failed:\", error)\r\n    throw error\r\n  }\r\n}\r\n\r\n// Transform form data to match backend API format\r\nconst transformFormDataToApiFormat = (formData: any) => {\r\n  return {\r\n    name: formData.name,\r\n    sku: formData.sku,\r\n    vendor: Number(formData.vendor),\r\n    brand: formData.brand,\r\n    categories: formData.categories.map((cat: any) => Number(cat)),\r\n    tags: formData.tags || [],\r\n    short_description: formData.shortDescription || \"\",\r\n    full_description: formData.fullDescription || \"\",\r\n    features: formData.features || [],\r\n    specifications: formData.specifications || [],\r\n    price: Number(formData.price),\r\n    compare_at_price: formData.compareAtPrice ? Number(formData.compareAtPrice) : null,\r\n    discount: formData.discount ? Number(formData.discount) : null,\r\n    taxable: formData.taxable || false,\r\n    tax_code: formData.taxCode || \"\",\r\n    has_variants: formData.hasVariants || false,\r\n    variant_options: formData.variantOptions || [],\r\n    // Handle inventory as nested object for your backend\r\n    inventory: {\r\n      quantity: formData.inventory?.quantity || 0,\r\n      trackInventory: formData.inventory?.trackInventory || true,\r\n      allowBackorders: formData.inventory?.allowBackorders || false,\r\n      lowStockThreshold: formData.inventory?.lowStockThreshold || 5,\r\n    },\r\n    // Handle shipping as individual fields to match your model\r\n    weight: formData.shipping?.weight || null,\r\n    weight_unit: formData.shipping?.weightUnit || \"kg\",\r\n    length: formData.shipping?.dimensions?.length || null,\r\n    width: formData.shipping?.dimensions?.width || null,\r\n    height: formData.shipping?.dimensions?.height || null,\r\n    dimensions_unit: formData.shipping?.dimensions?.unit || \"cm\",\r\n    shipping_class: formData.shipping?.shippingClass || \"\",\r\n    free_shipping: formData.shipping?.freeShipping || false,\r\n    shipping_note: formData.shipping?.shippingNote || \"\",\r\n    status: formData.status || \"draft\",\r\n    visibility: formData.visibility || \"visible\",\r\n    primaryImageIndex: formData.primaryImageIndex,\r\n    variants:\r\n      formData.hasVariants && formData.variants\r\n        ? formData.variants.map((variant: any) => ({\r\n            name: variant.name,\r\n            sku: variant.sku,\r\n            price: Number(variant.price),\r\n            compare_at_price: variant.compareAtPrice ? Number(variant.compareAtPrice) : null,\r\n            unit: variant.unit || \"\",\r\n            attributes: variant.attributes || {},\r\n          }))\r\n        : [],\r\n  }\r\n}\r\n\r\n// Mock data for fallback\r\nconst mockProducts = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Premium Wireless Headphones\",\r\n    sku: \"WH-1000\",\r\n    price: 299.99,\r\n    stock: 45,\r\n    status: \"published\",\r\n    categories: [\"Electronics\", \"Audio\"],\r\n    vendor: \"TechGear\",\r\n    images: [{ url: \"/placeholder.svg?height=200&width=200\" }],\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Ultra HD Smart TV\",\r\n    sku: \"TV-4K-55\",\r\n    price: 899.99,\r\n    stock: 12,\r\n    status: \"published\",\r\n    categories: [\"Electronics\", \"TVs\"],\r\n    vendor: \"ElectroTech\",\r\n    images: [{ url: \"/placeholder.svg?height=200&width=200\" }],\r\n  },\r\n]\r\n\r\nexport const productService = {\r\n  getAllProducts: async () => {\r\n    try {\r\n      const response = await apiRequest(\"/products/\")\r\n      return response\r\n    } catch (error) {\r\n      console.error(\"Error fetching products, using mock data:\", error)\r\n      return mockProducts\r\n    }\r\n  },\r\n\r\n  getProductById: async (id: string) => {\r\n    try {\r\n      const response = await apiRequest(`/products/${id}/`)\r\n      return response\r\n    } catch (error) {\r\n      console.error(\"Error fetching product, using mock data:\", error)\r\n      return mockProducts.find((p) => p.id === id)\r\n    }\r\n  },\r\n\r\n  createProduct: async (productData: any, imageFiles: File[]) => {\r\n    try {\r\n      // Transform the data to match backend format\r\n      const transformedData = transformFormDataToApiFormat(productData)\r\n\r\n      // Create FormData for file uploads\r\n      const formData = new FormData()\r\n\r\n      // Add product data as JSON string\r\n      formData.append(\"data\", JSON.stringify(transformedData))\r\n\r\n      // Add image files\r\n      imageFiles.forEach((file) => {\r\n        formData.append(\"images\", file)\r\n      })\r\n\r\n      const response = await fetch(`${API_BASE_URL}/products/`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `HTTP error! status: ${response.status}`\r\n        try {\r\n          const errorData = await response.json()\r\n          errorMessage = errorData.detail || errorData.error || errorMessage\r\n        } catch {\r\n          errorMessage = response.statusText || errorMessage\r\n        }\r\n        throw new Error(errorMessage)\r\n      }\r\n\r\n      const result = await response.json()\r\n      return result\r\n    } catch (error) {\r\n      console.error(\"Error creating product:\", error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  updateProduct: async (id: string, productData: any, imageFiles: File[] = [], deleteImageIds: string[] = []) => {\r\n    console.log(\"product update call\")\r\n    try {\r\n      // Transform the data to match backend format\r\n      const transformedData = transformFormDataToApiFormat(productData)\r\n\r\n      // Create FormData for file uploads\r\n      const formData = new FormData()\r\n\r\n      // Add product data as JSON string\r\n      formData.append(\"data\", JSON.stringify(transformedData))\r\n\r\n      // Add new image files\r\n      imageFiles.forEach((file) => {\r\n        formData.append(\"images\", file)\r\n      })\r\n\r\n      // Add image IDs to delete\r\n      deleteImageIds.forEach((imageId) => {\r\n        formData.append(\"delete_images\", imageId)\r\n      })\r\n\r\n      console.log(\"Updating product with ID:\", id)\r\n      console.log(\"Transformed data:\", transformedData)\r\n      console.log(\"Image files:\", imageFiles.length)\r\n      console.log(\"Delete image IDs:\", deleteImageIds)\r\n\r\n      const response = await fetch(`${API_BASE_URL}/products/${id}/`, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n      })\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `HTTP error! status: ${response.status}`\r\n        try {\r\n          const errorData = await response.json()\r\n          console.log(\"Update error response:\", errorData)\r\n          errorMessage = errorData.detail || errorData.error || JSON.stringify(errorData) || errorMessage\r\n        } catch {\r\n          errorMessage = response.statusText || errorMessage\r\n        }\r\n        throw new Error(errorMessage)\r\n      }\r\n\r\n      const result = await response.json()\r\n      console.log(\"Product updated successfully:\", result)\r\n      return result\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  deleteProduct: async (id: string) => {\r\n    try {\r\n      const response = await apiRequest(`/products/${id}/`, {\r\n        method: \"DELETE\",\r\n      })\r\n\r\n      // Django DELETE typically returns 204 No Content on success\r\n      return { success: true, message: \"Product deleted successfully\" }\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  updateStock: async (\r\n    id: string,\r\n    stockData: { quantity: number; trackInventory?: boolean; allowBackorders?: boolean; lowStockThreshold?: number },\r\n  ) => {\r\n    try {\r\n      const response = await apiRequest(`/products/${id}/update_stock/`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(stockData),\r\n      })\r\n      return response\r\n    } catch (error) {\r\n      console.error(\"Error updating stock:\", error)\r\n      throw error\r\n    }\r\n  },\r\n}\r\n\r\nexport const categoryService = {\r\n  getAllCategories: async () => {\r\n    try {\r\n      const response = await apiRequest(\"/categories/\")\r\n      return response\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error)\r\n      return [\r\n        { id: 1, category_name: \"Electronics\" },\r\n        { id: 2, category_name: \"Clothing\" },\r\n        { id: 3, category_name: \"Home & Garden\" },\r\n      ]\r\n    }\r\n  },\r\n\r\n  createCategory: async (categoryData: any) => {\r\n    console.log(\"Creating category with data:\", categoryData)\r\n\r\n    const formData = new FormData()\r\n    formData.append(\"category_name\", categoryData.name) // Map 'name' to 'category_name'\r\n\r\n    if (categoryData.parent_category) {\r\n      formData.append(\"parent_category\", categoryData.parent_category.toString())\r\n    }\r\n\r\n    // Ensure user_id is sent as \"user\" field\r\n    if (categoryData.user_id) {\r\n      formData.append(\"user\", categoryData.user_id.toString())\r\n      console.log(\"Added user ID:\", categoryData.user_id.toString())\r\n    } else {\r\n      console.error(\"No user_id provided in categoryData\")\r\n    }\r\n\r\n    // Only append image if it exists and is a File object\r\n    if (categoryData.image && categoryData.image instanceof File) {\r\n      formData.append(\"image\", categoryData.image)\r\n    }\r\n\r\n    try {\r\n      console.log(\"FormData contents:\")\r\n      for (const [key, value] of formData.entries()) {\r\n        console.log(key, value)\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/categories/`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        // Don't set Content-Type header when sending FormData\r\n        // The browser will automatically set the correct multipart/form-data with boundary\r\n      })\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `HTTP error! status: ${response.status}`\r\n        try {\r\n          const errorData = await response.json()\r\n          console.log(\"Error response:\", errorData)\r\n          errorMessage = errorData.detail || errorData.error || errorMessage\r\n        } catch {\r\n          errorMessage = response.statusText || errorMessage\r\n        }\r\n        throw new Error(errorMessage)\r\n      }\r\n\r\n      const result = await response.json()\r\n      return result\r\n    } catch (error) {\r\n      console.error(\"Error creating category:\", error)\r\n      throw error\r\n    }\r\n  },\r\n}\r\n\r\nexport const vendorService = {\r\n  getAllVendors: async () => {\r\n    try {\r\n      const response = await apiRequest(\"/vendors/\")\r\n      return response\r\n    } catch (error) {\r\n      console.error(\"Error fetching vendors:\", error)\r\n      return [\r\n        { id: 1, name: \"Default Vendor\" },\r\n        { id: 2, name: \"TechGear\" },\r\n        { id: 3, name: \"ElectroTech\" },\r\n      ]\r\n    }\r\n  },\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/services/product-form-schema.tsx"],"sourcesContent":["import * as z from \"zod\"\r\n\r\nexport const productFormSchema = z.object({\r\n  id: z.string().optional(),\r\n  name: z.string().min(1, \"Name is required\"),\r\n  slug: z.string().optional(),\r\n  sku: z.string().min(1, \"SKU is required\"),\r\n  vendor: z.string().min(1, \"Vendor is required\"),\r\n  brand: z.string().min(1, \"Brand is required\"),\r\n  categories: z.array(z.string()).min(1, \"At least one category is required\"),\r\n  tags: z.array(z.string()).optional().default([]),\r\n\r\n  shortDescription: z.string().optional(),\r\n  fullDescription: z.string().optional(),\r\n  features: z.array(z.string()).optional().default([]),\r\n  specifications: z\r\n    .array(\r\n      z.object({\r\n        name: z.string(),\r\n        value: z.string(),\r\n      }),\r\n    )\r\n    .optional()\r\n    .default([]),\r\n\r\n  price: z.number().min(0, \"Price must be greater than or equal to 0\"),\r\n  compareAtPrice: z.number().optional(),\r\n  discount: z.number().min(0).max(100).optional(),\r\n  taxable: z.boolean().default(false),\r\n  taxCode: z.string().optional(),\r\n\r\n  inventory: z.object({\r\n    trackInventory: z.boolean().default(true),\r\n    quantity: z.number().min(0).default(0),\r\n    allowBackorders: z.boolean().default(false),\r\n    lowStockThreshold: z.number().min(0).default(5),\r\n  }),\r\n\r\n  hasVariants: z.boolean().default(false),\r\n  variantOptions: z\r\n    .array(\r\n      z.object({\r\n        name: z.string(),\r\n        values: z.array(z.string()),\r\n        unit: z.string().optional(),\r\n      }),\r\n    )\r\n    .optional()\r\n    .default([]),\r\n\r\n  variants: z\r\n    .array(\r\n      z.object({\r\n        id: z.string().optional(),\r\n        name: z.string(),\r\n        sku: z.string(),\r\n        price: z.number(),\r\n        compareAtPrice: z.number().optional(),\r\n        quantity: z.number(),\r\n        image: z.string().optional(),\r\n        unit: z.string().optional(),\r\n        attributes: z.record(z.any()).optional(),\r\n      }),\r\n    )\r\n    .optional()\r\n    .default([]),\r\n\r\n  shipping: z.object({\r\n    weight: z.number().optional(),\r\n    weightUnit: z.enum([\"kg\", \"g\", \"lb\", \"oz\"]).default(\"kg\"),\r\n    dimensions: z.object({\r\n      length: z.number().optional(),\r\n      width: z.number().optional(),\r\n      height: z.number().optional(),\r\n      unit: z.enum([\"cm\", \"m\", \"in\", \"ft\"]).default(\"cm\"),\r\n    }),\r\n    shippingClass: z.string().optional(),\r\n    freeShipping: z.boolean().default(false),\r\n    shippingNote: z.string().optional(),\r\n  }),\r\n\r\n  status: z.enum([\"draft\", \"published\", \"scheduled\"]).default(\"draft\"),\r\n  visibility: z.enum([\"visible\", \"hidden\", \"featured\"]).default(\"visible\"),\r\n  publishDate: z.string().optional(),\r\n\r\n  images: z\r\n    .array(\r\n      z.object({\r\n        id: z.string().optional(),\r\n        url: z.string(),\r\n        alt: z.string().optional(),\r\n        isPrimary: z.boolean().default(false),\r\n        order: z.number().default(0),\r\n      }),\r\n    )\r\n    .optional()\r\n    .default([]),\r\n  primaryImageIndex: z.number().optional(),\r\n})\r\n\r\nexport type ProductFormValues = z.infer<typeof productFormSchema>\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Products/product-table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { useWatch, useForm, type Control } from \"react-hook-form\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { Trash2, Plus, X, Upload, ArrowLeft, PlusCircle } from \"lucide-react\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { useToast } from \"@/hooks/use-toast\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\"\r\nimport { productService, categoryService, vendorService } from \"@/services/api-service\"\r\nimport { productFormSchema } from \"@/services/product-form-schema\"\r\nimport type { ProductFormValues } from \"@/services/product-form-schema\"\r\n\r\nexport default function ProductForm({\r\n  initialData,\r\n  setIsAddOpen,\r\n}: Readonly<{\r\n  initialData?: ProductFormValues & { id?: string }\r\n  setIsAddOpen: (newProduct?: any) => void\r\n}>) {\r\n  const [activeTab, setActiveTab] = useState(\"basic\")\r\n  const [selectedCategories, setSelectedCategories] = useState<string[]>(initialData?.categories || [])\r\n  const [selectedTags, setSelectedTags] = useState<string[]>(initialData?.tags || [])\r\n  const [features, setFeatures] = useState<string[]>(initialData?.features || [\"\"])\r\n  const [specifications, setSpecifications] = useState<{ name: string; value: string }[]>(\r\n    initialData?.specifications || [{ name: \"\", value: \"\" }],\r\n  )\r\n  const [imageFiles, setImageFiles] = useState<File[]>([])\r\n  const [imagePreviewUrls, setImagePreviewUrls] = useState<string[]>(initialData?.images?.map((img) => img.url) || [])\r\n  const [activeImageIndex, setActiveImageIndex] = useState<number | null>(initialData?.primaryImageIndex ?? null)\r\n  const [variantOptions, setVariantOptions] = useState<{ name: string; values: string[]; unit?: string }[]>(\r\n    initialData?.variantOptions || [{ name: \"Size\", values: [\"S\", \"M\", \"L\"], unit: \"\" }],\r\n  )\r\n  const [categoryPopup, setCategoryPopup] = useState(false)\r\n  const [newCategory, setNewCategory] = useState(\"\")\r\n  const [categoryImg, setCategoryImg] = useState<File | null>(null)\r\n  const [selectedParentCategories, setSelectedParentCategories] = useState<number[]>([])\r\n  const [role, setRole] = useState(\"vendor\")\r\n  const [selectedVendorId, setSelectedVendorId] = useState<number | null>(null)\r\n  const [categories, setCategories] = useState<any[]>([])\r\n  const [vendors, setVendors] = useState<any[]>([])\r\n  const [tags, setTags] = useState<string[]>([\r\n    \"Summer\",\r\n    \"Winter\",\r\n    \"Spring\",\r\n    \"Fall\",\r\n    \"Casual\",\r\n    \"Formal\",\r\n    \"Sport\",\r\n    \"Outdoor\",\r\n    \"Indoor\",\r\n    \"Bestseller\",\r\n    \"New Arrival\",\r\n    \"Limited Edition\",\r\n    \"Sale\",\r\n    \"Clearance\",\r\n  ])\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [deletedImageIds, setDeletedImageIds] = useState<string[]>([])\r\n\r\n  const { toast } = useToast()\r\n\r\n  const tabs = [\"basic\", \"description\", \"pricing\", \"images\", \"variants\", \"shipping\"]\r\n  const currentTabIndex = tabs.indexOf(activeTab)\r\n  const isLastTab = currentTabIndex === tabs.length - 1\r\n\r\n  const handleNext = () => {\r\n    if (isLastTab) {\r\n      form.handleSubmit(onSubmit)()\r\n    } else {\r\n      setActiveTab(tabs[currentTabIndex + 1])\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    if (currentTabIndex > 0) {\r\n      setActiveTab(tabs[currentTabIndex - 1])\r\n    }\r\n  }\r\n\r\n  // Fetch data from API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [categoriesData, vendorsData] = await Promise.all([\r\n          categoryService.getAllCategories(),\r\n          vendorService.getAllVendors(),\r\n        ])\r\n\r\n        setCategories(categoriesData)\r\n        setVendors(vendorsData)\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Failed to load data. Please try again.\",\r\n          variant: \"destructive\",\r\n        })\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [toast])\r\n\r\n  useEffect(() => {\r\n    // When role is admin and vendors are loaded, automatically select the first vendor\r\n    if (role === \"admin\" && vendors.length > 0 && !selectedVendorId) {\r\n      setSelectedVendorId(vendors[0].id)\r\n    }\r\n  }, [role, vendors, selectedVendorId])\r\n\r\n  // Initialize form with default values or initial data\r\n  const form = useForm<ProductFormValues>({\r\n    resolver: zodResolver(productFormSchema),\r\n    defaultValues: initialData\r\n      ? {\r\n        ...initialData,\r\n        vendor: initialData.vendor?.toString() ?? \"\",\r\n        categories: initialData.categories?.map((cat: any) => cat.toString()) ?? [],\r\n        shortDescription: initialData.shortDescription ?? \"\",\r\n        fullDescription: initialData.fullDescription ?? \"\",\r\n        compareAtPrice: initialData.compareAtPrice,\r\n        taxCode: initialData.taxCode ?? \"\",\r\n        inventory: {\r\n          trackInventory: initialData.inventory?.trackInventory ?? true,\r\n          quantity: initialData.inventory?.quantity ?? 0,\r\n          allowBackorders: initialData.inventory?.allowBackorders ?? false,\r\n          lowStockThreshold: initialData.inventory?.lowStockThreshold ?? 5,\r\n        },\r\n        shipping: {\r\n          weight: initialData.shipping?.weight ?? null,\r\n          weightUnit: initialData.shipping?.weightUnit ?? \"kg\",\r\n          dimensions: {\r\n            length: initialData.shipping.dimensions.length,\r\n            width: initialData.shipping.dimensions.width,\r\n            height: initialData.shipping.dimensions.height,\r\n            unit: initialData.shipping.dimensions.unit ?? \"cm\",\r\n          },\r\n          shippingClass: initialData.shipping.shippingClass ?? \"\",\r\n          freeShipping: initialData.shipping.freeShipping ?? false,\r\n          shippingNote: initialData.shipping.shippingNote ?? \"\",\r\n        },\r\n        hasVariants: initialData.variants ?? false,\r\n        variantOptions: initialData.variantOptions ?? [],\r\n        variants: initialData.variants ?? [],\r\n        images: initialData.images.map((img: any) => ({ url: img.url, alt: img.alt, isPrimary: img.is_primary })) || [],\r\n        primaryImageIndex: initialData.images?.findIndex((img: any) => img.is_primary) ?? undefined,\r\n      }\r\n      : {\r\n        name: \"\",\r\n        sku: \"\",\r\n        vendor: \"\",\r\n        brand: \"\",\r\n        categories: [],\r\n        tags: [],\r\n        shortDescription: \"\",\r\n        fullDescription: \"\",\r\n        features: [],\r\n        specifications: [],\r\n        price: 0,\r\n        compareAtPrice: undefined,\r\n        discount: undefined,\r\n        taxable: true,\r\n        taxCode: \"\",\r\n        inventory: {\r\n          trackInventory: true,\r\n          quantity: 0,\r\n          allowBackorders: false,\r\n          lowStockThreshold: 5,\r\n        },\r\n        images: [],\r\n        primaryImageIndex: undefined,\r\n        hasVariants: false,\r\n        variantOptions: [],\r\n        variants: [],\r\n        shipping: {\r\n          weight: undefined,\r\n          weightUnit: \"kg\",\r\n          dimensions: {\r\n            length: undefined,\r\n            width: undefined,\r\n            height: undefined,\r\n            unit: \"cm\",\r\n          },\r\n          shippingClass: \"\",\r\n          freeShipping: false,\r\n          shippingNote: \"\",\r\n        },\r\n        status: \"published\",\r\n        visibility: \"visible\",\r\n        publishDate: \"\",\r\n      },\r\n  })\r\n\r\n  // Handle form submission\r\n  async function onSubmit(data: ProductFormValues) {\r\n    console.log(\"the process is here now\")\r\n    setIsSubmitting(true)\r\n    try {\r\n\r\n      const formData = {\r\n        ...data,\r\n        vendor: data.vendor.toString(),\r\n        categories: data.categories,\r\n        variantOptions:\r\n          data.variantOptions?.map((option) => ({\r\n            ...option,\r\n            values: option.values.filter((value) => value.trim() !== \"\"),\r\n          })) || [],\r\n        primaryImageIndex: activeImageIndex !== null ? activeImageIndex : undefined,\r\n        inventory: {\r\n          trackInventory: data.inventory?.trackInventory ?? true,\r\n          quantity: data.inventory?.quantity ?? 0,\r\n          allowBackorders: data.inventory?.allowBackorders ?? false,\r\n          lowStockThreshold: data.inventory?.lowStockThreshold ?? 5,\r\n        },\r\n      }\r\n\r\n      let response\r\n\r\n      console.log(\"Initial data:\", initialData)\r\n      console.log(\"Initial data ID:\", initialData?.id)\r\n      if (initialData) {\r\n        console.log(\"Updating existing product with ID:\", initialData.id)\r\n        response = await productService.updateProduct(initialData.id, formData, imageFiles, deletedImageIds)\r\n      } else {\r\n        console.log(\"Creating new product\")\r\n        response = await productService.createProduct(formData, imageFiles)\r\n      }\r\n\r\n      if (!response) {\r\n        throw new Error(\"No response from server\")\r\n      }\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: initialData?.id ? \"Product updated successfully\" : \"Product created successfully\",\r\n      })\r\n\r\n      setIsAddOpen(response)\r\n    } catch (error: any) {\r\n      console.error(\"Error submitting product:\", error)\r\n\r\n      const errorMessage = error.message || \"Failed to save product. Please try again.\"\r\n\r\n      toast({\r\n        title: \"Error\",\r\n        description: errorMessage,\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const filesArray = Array.from(e.target.files)\r\n      setImageFiles((prev) => [...prev, ...filesArray])\r\n\r\n      const newPreviewUrls = filesArray.map((file) => URL.createObjectURL(file))\r\n      setImagePreviewUrls((prev) => [...prev, ...newPreviewUrls])\r\n\r\n      const newImages = newPreviewUrls.map((url) => ({ url, alt: \"\", isPrimary: false }))\r\n      const currentImages = form.getValues(\"images\") || []\r\n      form.setValue(\"images\", [...currentImages, ...newImages])\r\n\r\n      if (activeImageIndex === null && newPreviewUrls.length > 0) {\r\n        setActiveImageIndex(currentImages.length)\r\n        form.setValue(\"primaryImageIndex\", currentImages.length)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Set active image\r\n  const setActiveImage = (index: number) => {\r\n    setActiveImageIndex(index)\r\n    form.setValue(\"primaryImageIndex\", index)\r\n\r\n    const currentImages = form.getValues(\"images\") || []\r\n    const newImages = currentImages.map((img, i) => ({\r\n      ...img,\r\n      isPrimary: i === index,\r\n    }))\r\n    form.setValue(\"images\", newImages)\r\n  }\r\n\r\n  // Remove image\r\n  const removeImage = (index: number) => {\r\n    const currentImages = form.getValues(\"images\") || []\r\n    if (currentImages[index] && currentImages[index].id) {\r\n      setDeletedImageIds([...deletedImageIds, currentImages[index].id])\r\n    }\r\n\r\n    const newPreviewUrls = [...imagePreviewUrls]\r\n    newPreviewUrls.splice(index, 1)\r\n    setImagePreviewUrls(newPreviewUrls)\r\n\r\n    const newImageFiles = [...imageFiles]\r\n    if (index < newImageFiles.length) {\r\n      newImageFiles.splice(index, 1)\r\n      setImageFiles(newImageFiles)\r\n    }\r\n\r\n    const newImages = [...currentImages]\r\n    newImages.splice(index, 1)\r\n    form.setValue(\"images\", newImages)\r\n\r\n    if (activeImageIndex === index) {\r\n      const newIndex = newImages.length > 0 ? 0 : null\r\n      setActiveImageIndex(newIndex)\r\n      form.setValue(\"primaryImageIndex\", newIndex)\r\n    } else if (activeImageIndex !== null && activeImageIndex > index) {\r\n      setActiveImageIndex(activeImageIndex - 1)\r\n      form.setValue(\"primaryImageIndex\", activeImageIndex - 1)\r\n    }\r\n  }\r\n\r\n  // Get category name by ID\r\n  const getCategoryNameById = (id: string) => {\r\n    const category = categories.find((cat) => cat.id.toString() === id || cat.category_name === id)\r\n    return category ? category.category_name : id\r\n  }\r\n\r\n  // Handle category selection\r\n  const toggleCategory = (categoryId: string) => {\r\n    if (selectedCategories.includes(categoryId)) {\r\n      const newCategories = selectedCategories.filter((id) => id !== categoryId)\r\n      setSelectedCategories(newCategories)\r\n      form.setValue(\"categories\", newCategories)\r\n    } else {\r\n      const newCategories = [...selectedCategories, categoryId]\r\n      setSelectedCategories(newCategories)\r\n      form.setValue(\"categories\", newCategories)\r\n    }\r\n  }\r\n\r\n  // Handle tag selection\r\n  const toggleTag = (tag: string) => {\r\n    if (selectedTags.includes(tag)) {\r\n      const newTags = selectedTags.filter((t) => t !== tag)\r\n      setSelectedTags(newTags)\r\n      form.setValue(\"tags\", newTags)\r\n    } else {\r\n      const newTags = [...selectedTags, tag]\r\n      setSelectedTags(newTags)\r\n      form.setValue(\"tags\", newTags)\r\n    }\r\n  }\r\n\r\n  // Feature management\r\n  const addFeature = () => {\r\n    setFeatures([...features, \"\"])\r\n  }\r\n\r\n  const updateFeature = (index: number, value: string) => {\r\n    const newFeatures = [...features]\r\n    newFeatures[index] = value\r\n    setFeatures(newFeatures)\r\n    form.setValue(\"features\", newFeatures)\r\n  }\r\n\r\n  const removeFeature = (index: number) => {\r\n    const newFeatures = [...features]\r\n    newFeatures.splice(index, 1)\r\n    setFeatures(newFeatures)\r\n    form.setValue(\"features\", newFeatures)\r\n  }\r\n\r\n  // Specification management\r\n  const addSpecification = () => {\r\n    setSpecifications([...specifications, { name: \"\", value: \"\" }])\r\n  }\r\n\r\n  const updateSpecification = (index: number, field: \"name\" | \"value\", value: string) => {\r\n    const newSpecs = [...specifications]\r\n    newSpecs[index][field] = value\r\n    setSpecifications(newSpecs)\r\n    form.setValue(\"specifications\", newSpecs)\r\n  }\r\n\r\n  const removeSpecification = (index: number) => {\r\n    const newSpecs = [...specifications]\r\n    newSpecs.splice(index, 1)\r\n    setSpecifications(newSpecs)\r\n    form.setValue(\"specifications\", newSpecs)\r\n  }\r\n\r\n  // Variant management\r\n  const updateVariantOptionUnit = (optionIndex: number, unit: string) => {\r\n    const newOptions = [...variantOptions]\r\n    newOptions[optionIndex].unit = unit\r\n    setVariantOptions(newOptions)\r\n    form.setValue(\"variantOptions\", newOptions)\r\n  }\r\n\r\n  const addVariantOption = () => {\r\n    setVariantOptions([...variantOptions, { name: \"\", values: [\"\"] }])\r\n  }\r\n\r\n  const updateVariantOptionName = (index: number, name: string) => {\r\n    const newOptions = [...variantOptions]\r\n    newOptions[index].name = name\r\n    setVariantOptions(newOptions)\r\n    form.setValue(\"variantOptions\", newOptions)\r\n  }\r\n\r\n  const addVariantValue = (optionIndex: number) => {\r\n    const newOptions = [...variantOptions]\r\n    newOptions[optionIndex].values.push(\"\")\r\n    setVariantOptions(newOptions)\r\n    form.setValue(\"variantOptions\", newOptions)\r\n  }\r\n\r\n  const updateVariantValue = (optionIndex: number, valueIndex: number, value: string) => {\r\n    const newOptions = [...variantOptions]\r\n    newOptions[optionIndex].values[valueIndex] = value\r\n    setVariantOptions(newOptions)\r\n    form.setValue(\"variantOptions\", newOptions)\r\n  }\r\n\r\n  const removeVariantValue = (optionIndex: number, valueIndex: number) => {\r\n    const newOptions = [...variantOptions]\r\n    newOptions[optionIndex].values.splice(valueIndex, 1)\r\n    setVariantOptions(newOptions)\r\n    form.setValue(\"variantOptions\", newOptions)\r\n  }\r\n\r\n  const removeVariantOption = (index: number) => {\r\n    const newOptions = [...variantOptions]\r\n    newOptions.splice(index, 1)\r\n    setVariantOptions(newOptions)\r\n    form.setValue(\"variantOptions\", newOptions)\r\n  }\r\n\r\n  // Generate variants\r\n  const generateVariants = () => {\r\n    if (variantOptions.length === 0) return\r\n\r\n    const isValid = variantOptions.every(\r\n      (option) =>\r\n        option.name.trim() !== \"\" && option.values.length > 0 && option.values.every((value) => value.trim() !== \"\"),\r\n    )\r\n\r\n    if (!isValid) {\r\n      toast({\r\n        title: \"Invalid variant options\",\r\n        description: \"Please ensure all variant options have names and values.\",\r\n        variant: \"destructive\",\r\n      })\r\n      return\r\n    }\r\n\r\n    const generateCombinations = (options: typeof variantOptions, current: string[] = [], index = 0): string[][] => {\r\n      if (index === options.length) {\r\n        return [current]\r\n      }\r\n\r\n      const combinations: string[][] = []\r\n      for (const value of options[index].values) {\r\n        combinations.push(...generateCombinations(options, [...current, value], index + 1))\r\n      }\r\n      return combinations\r\n    }\r\n\r\n    const combinations = generateCombinations(variantOptions)\r\n    const basePrice = form.getValues(\"price\") || 0\r\n    const baseSku = form.getValues(\"sku\") || \"\"\r\n\r\n    const variants = combinations.map((combo, index) => {\r\n      const variantName = combo.join(\" / \")\r\n      const units = variantOptions.map((option) => option.unit ?? \"\").filter(Boolean)\r\n      const unit = units.length > 0 ? units[0] : \"\"\r\n\r\n      return {\r\n        id: `variant-${index + 1}`,\r\n        name: variantName,\r\n        sku: `${baseSku}-${combo.map((c) => c.substring(0, 2).toUpperCase()).join(\"\")}`,\r\n        price: basePrice,\r\n        compareAtPrice: form.getValues(\"compareAtPrice\"),\r\n        quantity: 0,\r\n        image: \"\",\r\n        unit: unit,\r\n        attributes: {},\r\n      }\r\n    })\r\n\r\n    form.setValue(\"variants\", variants)\r\n\r\n    toast({\r\n      title: \"Variants generated\",\r\n      description: `${variants.length} variants have been generated.`,\r\n    })\r\n  }\r\n\r\n  // Price calculation\r\n  const compareAtPrice = useWatch({ control: form.control, name: \"compareAtPrice\" })\r\n  const discount = useWatch({ control: form.control, name: \"discount\" })\r\n\r\n  useEffect(() => {\r\n    if (compareAtPrice && discount) {\r\n      const calculatedPrice = compareAtPrice * (1 - discount / 100)\r\n      form.setValue(\"price\", Number(calculatedPrice.toFixed(2)))\r\n    }\r\n  }, [compareAtPrice, discount, form])\r\n\r\n  // Add new category\r\n  async function addNewCategory(e: React.FormEvent) {\r\n    e.preventDefault()\r\n    if (!newCategory.trim()) return\r\n\r\n    try {\r\n      let vendorToUse = selectedVendorId\r\n      if (role === \"admin\" && !selectedVendorId && vendors.length > 0) {\r\n        vendorToUse = vendors[0].id\r\n      }\r\n\r\n      if (!vendorToUse) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Please select a vendor\",\r\n          variant: \"destructive\",\r\n        })\r\n        return\r\n      }\r\n\r\n      const categoryData = {\r\n        name: newCategory.trim(),\r\n        parent_category: selectedParentCategories.length > 0 ? selectedParentCategories[0] : null,\r\n        user_id: vendorToUse,\r\n        image: categoryImg,\r\n      }\r\n\r\n      console.log(\"Sending category data:\", categoryData)\r\n\r\n      const response = await categoryService.createCategory(categoryData)\r\n\r\n      setCategories((prevCategories) => [...prevCategories, response])\r\n\r\n      const newCategoryId = response.id.toString()\r\n      const newSelected = [...selectedCategories, newCategoryId]\r\n      setSelectedCategories(newSelected)\r\n      form.setValue(\"categories\", newSelected)\r\n\r\n      setNewCategory(\"\")\r\n      setCategoryImg(null)\r\n      setSelectedParentCategories([])\r\n      setCategoryPopup(false)\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Category created successfully\",\r\n      })\r\n    } catch (error: any) {\r\n      console.error(\"Error creating category:\", error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to create category\",\r\n        variant: \"destructive\",\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <Dialog open={categoryPopup} onOpenChange={setCategoryPopup}>\r\n        <DialogContent className=\"sm:max-w-[425px]\">\r\n          <DialogHeader>\r\n            <DialogTitle>Add New Category</DialogTitle>\r\n            <DialogDescription>Create a new product category</DialogDescription>\r\n          </DialogHeader>\r\n          <form onSubmit={addNewCategory}>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"relative inline-block\">\r\n                {categoryImg && <div className=\"mb-2 text-sm text-gray-600\">Selected file: {categoryImg.name}</div>}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".jpg,.jpeg,.png,.gif\"\r\n                  className=\"absolute inset-0 opacity-0 w-full h-full cursor-pointer\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files?.[0]) {\r\n                      setCategoryImg(e.target.files[0])\r\n                    }\r\n                  }}\r\n                />\r\n                <Button type=\"button\" variant=\"outline\" size=\"sm\">\r\n                  <Upload className=\"mr-2 h-4 w-4\" />\r\n                  Upload Image\r\n                </Button>\r\n              </div>\r\n\r\n              <Input\r\n                id=\"categoryName\"\r\n                value={newCategory}\r\n                onChange={(e) => setNewCategory(e.target.value)}\r\n                placeholder=\"Category name\"\r\n                required\r\n              />\r\n\r\n              <div className=\"space-y-2\">\r\n                <label className=\"text-sm font-medium\">Vendor</label>\r\n                <Select\r\n                  value={selectedVendorId?.toString() ?? \"\"}\r\n                  onValueChange={(value) => {\r\n                    const vendorId = Number.parseInt(value)\r\n                    setSelectedVendorId(vendorId)\r\n                  }}\r\n                  disabled={role === \"admin\"}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select vendor\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {vendors.map((vendor) => (\r\n                      <SelectItem key={vendor.id} value={vendor.id.toString()}>\r\n                        {vendor.name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n                {role === \"admin\" && vendors.length > 0 && (\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    As admin, the first vendor ({vendors[0]?.name}) will be used by default.\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <label className=\"text-sm font-medium\">Parent Category</label>\r\n                <Select\r\n                  onValueChange={(value) => {\r\n                    const categoryId = Number.parseInt(value)\r\n                    setSelectedParentCategories([categoryId])\r\n                  }}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select parent category\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {categories.map((category) => (\r\n                      <SelectItem key={category.id} value={category.id.toString()}>\r\n                        {category.category_name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n                {selectedParentCategories.length > 0 && (\r\n                  <div className=\"flex flex-wrap gap-2 mt-2\">\r\n                    {selectedParentCategories.map((id) => {\r\n                      const category = categories.find((c) => c.id === id)\r\n                      return (\r\n                        <div key={id} className=\"flex items-center bg-gray-100 px-2 py-1 rounded\">\r\n                          <span>{category?.category_name}</span>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => setSelectedParentCategories([])}\r\n                            className=\"ml-2 text-red-500\"\r\n                          >\r\n                            ×\r\n                          </button>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <DialogFooter>\r\n                <Button type=\"submit\" disabled={!newCategory.trim() || (role === \"vendor\" && !selectedVendorId)}>\r\n                  Add Category\r\n                </Button>\r\n              </DialogFooter>\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <div className=\"heading flex space-x-3 justify-center items-center\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"bg-transparent text-black cursor-pointer hover:bg-transparent text-2xl\"\r\n              onClick={() => setIsAddOpen()}\r\n            >\r\n              <ArrowLeft />\r\n            </Button>\r\n            <h1 className=\"text-2xl font-bold\">{initialData ? \"Edit Product\" : \"Add New Product\"}</h1>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"status\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex items-center gap-2 space-y-0\">\r\n                  <Select value={field.value} onValueChange={field.onChange}>\r\n                    <SelectTrigger className=\"w-[130px]\">\r\n                      <SelectValue placeholder=\"Status\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"draft\">Draft</SelectItem>\r\n                      <SelectItem value=\"published\">Published</SelectItem>\r\n                      <SelectItem value=\"scheduled\">Scheduled</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n          <TabsList className=\"grid grid-cols-3 md:grid-cols-6 w-full\">\r\n            <TabsTrigger value=\"basic\">Basic Info</TabsTrigger>\r\n            <TabsTrigger value=\"description\">Description</TabsTrigger>\r\n            <TabsTrigger value=\"pricing\">Pricing</TabsTrigger>\r\n            <TabsTrigger value=\"images\">Images</TabsTrigger>\r\n            <TabsTrigger value=\"variants\">Variants</TabsTrigger>\r\n            <TabsTrigger value=\"shipping\">Shipping</TabsTrigger>\r\n          </TabsList>\r\n\r\n          {/* Basic Information Tab */}\r\n          <TabsContent value=\"basic\" className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"name\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Product Name*</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Enter product name\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"sku\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>SKU (Stock Keeping Unit)*</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Enter SKU\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"vendor\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Vendor*</FormLabel>\r\n                    <Select value={field.value} onValueChange={field.onChange}>\r\n                      <FormControl>\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder=\"Select vendor\" />\r\n                        </SelectTrigger>\r\n                      </FormControl>\r\n                      <SelectContent>\r\n                        {vendors.map((vendor) => (\r\n                          <SelectItem key={vendor.id} value={vendor.id.toString()}>\r\n                            {vendor.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"brand\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Brand*</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Enter brand name\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"categories\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Categories*</FormLabel>\r\n                  <Select\r\n                    onValueChange={(value) => {\r\n                      if (!selectedCategories.includes(value)) {\r\n                        const newCategories = [...selectedCategories, value]\r\n                        setSelectedCategories(newCategories)\r\n                        form.setValue(\"categories\", newCategories)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FormControl>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Select categories\" />\r\n                      </SelectTrigger>\r\n                    </FormControl>\r\n                    <SelectContent>\r\n                      {categories.map((category) => (\r\n                        <SelectItem key={category.id} value={category.id.toString()}>\r\n                          {category.category_name}\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                  <div className=\"flex flex-wrap gap-2 mt-2 border p-3 rounded-md\">\r\n                    {selectedCategories.map((categoryId) => (\r\n                      <Badge key={categoryId} variant=\"default\" className=\"cursor-pointer text-sm py-1.5 px-3\">\r\n                        {getCategoryNameById(categoryId)}\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => toggleCategory(categoryId)}\r\n                          className=\"ml-2 text-white hover:text-red-100\"\r\n                        >\r\n                          ×\r\n                        </button>\r\n                      </Badge>\r\n                    ))}\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={() => setCategoryPopup(true)}\r\n                      className=\"ml-2\"\r\n                    >\r\n                      <PlusCircle className=\"h-4 w-4 mr-1\" /> Add New\r\n                    </Button>\r\n                  </div>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"tags\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Tags</FormLabel>\r\n                  <FormDescription>Select tags to help customers find your product</FormDescription>\r\n                  <div className=\"flex flex-wrap gap-2 mt-2 border p-3 rounded-md\">\r\n                    {tags.map((tag) => (\r\n                      <Badge\r\n                        key={tag}\r\n                        variant={selectedTags.includes(tag) ? \"default\" : \"outline\"}\r\n                        className=\"cursor-pointer text-sm py-1.5 px-3\"\r\n                        onClick={() => toggleTag(tag)}\r\n                      >\r\n                        {tag}\r\n                      </Badge>\r\n                    ))}\r\n                  </div>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"visibility\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Visibility</FormLabel>\r\n                  <FormControl>\r\n                    <RadioGroup value={field.value} onValueChange={field.onChange} className=\"flex flex-col space-y-1\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <RadioGroupItem value=\"visible\" id=\"visible\" />\r\n                        <Label htmlFor=\"visible\">Visible</Label>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <RadioGroupItem value=\"hidden\" id=\"hidden\" />\r\n                        <Label htmlFor=\"hidden\">Hidden</Label>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <RadioGroupItem value=\"featured\" id=\"featured\" />\r\n                        <Label htmlFor=\"featured\">Featured</Label>\r\n                      </div>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </TabsContent>\r\n\r\n          {/* Description Tab */}\r\n          <TabsContent value=\"description\" className=\"space-y-6\">\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"shortDescription\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Short Description</FormLabel>\r\n                  <FormDescription>A brief summary of the product (max 300 characters)</FormDescription>\r\n                  <FormControl>\r\n                    <Textarea placeholder=\"Enter a short description\" className=\"resize-none\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"fullDescription\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Full Description</FormLabel>\r\n                  <FormControl>\r\n                    <Textarea placeholder=\"Enter full product description\" className=\"min-h-[200px]\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <FormLabel>Product Features</FormLabel>\r\n                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={addFeature}>\r\n                  <Plus className=\"h-4 w-4 mr-1\" /> Add Feature\r\n                </Button>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                {features.map((feature, index) => (\r\n                  <div key={index} className=\"flex items-center gap-2\">\r\n                    <Input\r\n                      value={feature}\r\n                      onChange={(e) => updateFeature(index, e.target.value)}\r\n                      placeholder={`Feature ${index + 1}`}\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      onClick={() => removeFeature(index)}\r\n                      disabled={features.length <= 1}\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <FormLabel>Specifications</FormLabel>\r\n                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={addSpecification}>\r\n                  <Plus className=\"h-4 w-4 mr-1\" /> Add Specification\r\n                </Button>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                {specifications.map((spec, index) => (\r\n                  <div key={index} className=\"flex items-center gap-2\">\r\n                    <Input\r\n                      value={spec.name}\r\n                      onChange={(e) => updateSpecification(index, \"name\", e.target.value)}\r\n                      placeholder=\"Name (e.g. Material)\"\r\n                      className=\"w-1/3\"\r\n                    />\r\n                    <Input\r\n                      value={spec.value}\r\n                      onChange={(e) => updateSpecification(index, \"value\", e.target.value)}\r\n                      placeholder=\"Value (e.g. Cotton)\"\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      onClick={() => removeSpecification(index)}\r\n                      disabled={specifications.length <= 1}\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          {/* Pricing Tab */}\r\n          <TabsContent value=\"pricing\" className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"compareAtPrice\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Original Price</FormLabel>\r\n                    <FormDescription>Set the original price before discounts</FormDescription>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <span className=\"absolute left-3 top-2.5\">NRs</span>\r\n                        <Input\r\n                          type=\"number\"\r\n                          step=\"0.01\"\r\n                          min=\"0\"\r\n                          className=\"pl-12\"\r\n                          {...field}\r\n                          value={field.value ?? \"\"}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value ? Number.parseFloat(e.target.value) : undefined\r\n                            field.onChange(value)\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"discount\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Discount</FormLabel>\r\n                    <FormDescription>Percentage off the original price</FormDescription>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <span className=\"absolute left-3 top-2.5\">%</span>\r\n                        <Input\r\n                          type=\"number\"\r\n                          step=\"0.01\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          className=\"pl-12\"\r\n                          {...field}\r\n                          value={field.value ?? \"\"}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value ? Number.parseFloat(e.target.value) : undefined\r\n                            field.onChange(value)\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"price\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Sale Price*</FormLabel>\r\n                    <FormDescription>Final price after discount (auto-calculated)</FormDescription>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <span className=\"absolute left-3 top-2.5\">NRs</span>\r\n                        <Input type=\"number\" step=\"0.01\" min=\"0\" className=\"pl-12 bg-gray-50\" {...field} />\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"taxable\"\r\n                render={({ field }) => (\r\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\r\n                    <FormControl>\r\n                      <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                    </FormControl>\r\n                    <div className=\"space-y-1 leading-none\">\r\n                      <FormLabel>Charge tax on this product</FormLabel>\r\n                      <FormDescription>Enable if this product is taxable</FormDescription>\r\n                    </div>\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control as Control<ProductFormValues>}\r\n                name=\"taxCode\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Tax Code</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Enter tax code\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <Separator />\r\n\r\n            <div>\r\n              <h3 className=\"text-lg font-medium mb-4\">Inventory</h3>\r\n              <div className=\"space-y-4\">\r\n                <FormField\r\n                  control={form.control as Control<ProductFormValues>}\r\n                  name=\"inventory.trackInventory\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\r\n                      <FormControl>\r\n                        <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                      </FormControl>\r\n                      <div className=\"space-y-1 leading-none\">\r\n                        <FormLabel>Track inventory</FormLabel>\r\n                        <FormDescription>Keep track of inventory quantities</FormDescription>\r\n                      </div>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                  <FormField\r\n                    control={form.control as Control<ProductFormValues>}\r\n                    name=\"inventory.quantity\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Quantity</FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            {...field}\r\n                            value={field.value}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value === \"\" ? 0 : Number.parseInt(e.target.value, 10)\r\n                              field.onChange(value)\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control as Control<ProductFormValues>}\r\n                    name=\"inventory.lowStockThreshold\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Low stock threshold</FormLabel>\r\n                        <FormDescription>Get notified when inventory is low</FormDescription>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            {...field}\r\n                            value={field.value ?? \"\"}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value ? Number.parseInt(e.target.value) : undefined\r\n                              field.onChange(value)\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                <FormField\r\n                  control={form.control as Control<ProductFormValues>}\r\n                  name=\"inventory.allowBackorders\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\r\n                      <FormControl>\r\n                        <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                      </FormControl>\r\n                      <div className=\"space-y-1 leading-none\">\r\n                        <FormLabel>Allow backorders</FormLabel>\r\n                        <FormDescription>Allow customers to purchase when out of stock</FormDescription>\r\n                      </div>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          {/* Images Tab */}\r\n          <TabsContent value=\"images\" className=\"space-y-6\">\r\n            <div>\r\n              <FormLabel>Product Images</FormLabel>\r\n              <FormDescription>\r\n                Upload images for your product. Click on an image to set it as the primary image.\r\n              </FormDescription>\r\n\r\n              <div className=\"mt-4 border-2 border-dashed rounded-lg p-6 text-center\">\r\n                <Input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  multiple\r\n                  onChange={handleImageUpload}\r\n                  className=\"hidden\"\r\n                  id=\"image-upload\"\r\n                />\r\n                <label htmlFor=\"image-upload\" className=\"cursor-pointer\">\r\n                  <div className=\"flex flex-col items-center\">\r\n                    <Upload className=\"h-10 w-10 text-muted-foreground mb-2\" />\r\n                    <p className=\"text-sm font-medium\">Click to upload product images</p>\r\n                    <p className=\"text-xs text-muted-foreground mt-1\">Supports JPG, PNG, GIF up to 5MB</p>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n\r\n              {imagePreviewUrls.length > 0 && (\r\n                <div className=\"mt-6 grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  {imagePreviewUrls.map((url, index) => (\r\n                    <div key={index} className=\"relative group\">\r\n                      <div\r\n                        className={`aspect-square rounded-md overflow-hidden border cursor-pointer ${activeImageIndex === index ? \"ring-4 ring-orange-500\" : \"\"\r\n                          }`}\r\n                        onClick={() => setActiveImage(index)}\r\n                      >\r\n                        <img\r\n                          src={url || \"/placeholder.svg\"}\r\n                          alt={`Product image ${index + 1}`}\r\n                          className=\"w-full h-full object-cover\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center gap-2\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"secondary\"\r\n                          size=\"sm\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            setActiveImage(index)\r\n                          }}\r\n                          className=\"h-8\"\r\n                        >\r\n                          Set as primary\r\n                        </Button>\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"destructive\"\r\n                          size=\"icon\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            removeImage(index)\r\n                          }}\r\n                          className=\"h-8 w-8\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </div>\r\n                      {activeImageIndex === index && (\r\n                        <Badge className=\"absolute top-2 left-2 bg-orange-500\">Primary</Badge>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </TabsContent>\r\n\r\n          {/* Variants Tab */}\r\n          <TabsContent value=\"variants\" className=\"space-y-6\">\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"hasVariants\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\r\n                  <FormControl>\r\n                    <Switch checked={field.value} onCheckedChange={field.onChange} />\r\n                  </FormControl>\r\n                  <div className=\"space-y-1 leading-none\">\r\n                    <FormLabel>This product has multiple options, like different sizes or colors</FormLabel>\r\n                  </div>\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            {form.watch(\"hasVariants\") && (\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h3 className=\"text-lg font-medium\">Options</h3>\r\n                    <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={addVariantOption}>\r\n                      <Plus className=\"h-4 w-4 mr-1\" /> Add Option\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-4\">\r\n                    {variantOptions.map((option, optionIndex) => (\r\n                      <Card key={optionIndex}>\r\n                        <CardContent className=\"p-4 space-y-4\">\r\n                          <div className=\"flex items-center justify-between gap-4\">\r\n                            <div className=\"flex items-center gap-2 w-full\">\r\n                              <span className=\"font-medium min-w-24\">Option {optionIndex + 1}:</span>\r\n                              <Input\r\n                                value={option.name}\r\n                                onChange={(e) => updateVariantOptionName(optionIndex, e.target.value)}\r\n                                placeholder=\"Option name (e.g. Size, Color)\"\r\n                                className=\"flex-1\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2 w-full\">\r\n                              <span className=\"font-medium min-w-24\">Unit:</span>\r\n                              <Input\r\n                                value={option.unit || \"\"}\r\n                                onChange={(e) => updateVariantOptionUnit(optionIndex, e.target.value)}\r\n                                placeholder=\"Unit (e.g. cm, ml, kg)\"\r\n                                className=\"flex-1\"\r\n                              />\r\n                            </div>\r\n                            <Button\r\n                              type=\"button\"\r\n                              variant=\"ghost\"\r\n                              size=\"icon\"\r\n                              onClick={() => removeVariantOption(optionIndex)}\r\n                              disabled={variantOptions.length <= 1}\r\n                              className=\"ml-2\"\r\n                            >\r\n                              <Trash2 className=\"h-4 w-4\" />\r\n                            </Button>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                              <span className=\"text-sm font-medium\">Values:</span>\r\n                              <Button\r\n                                type=\"button\"\r\n                                variant=\"ghost\"\r\n                                size=\"sm\"\r\n                                onClick={() => addVariantValue(optionIndex)}\r\n                              >\r\n                                <Plus className=\"h-3 w-3 mr-1\" /> Add Value\r\n                              </Button>\r\n                            </div>\r\n                            <div className=\"flex flex-wrap gap-2\">\r\n                              {option.values.map((value, valueIndex) => (\r\n                                <div\r\n                                  key={valueIndex}\r\n                                  className=\"flex items-center gap-1 bg-muted rounded-md pl-2 pr-1 py-1\"\r\n                                >\r\n                                  <Input\r\n                                    value={value}\r\n                                    onChange={(e) => updateVariantValue(optionIndex, valueIndex, e.target.value)}\r\n                                    placeholder=\"Value\"\r\n                                    className=\"h-7 w-20 min-w-0 border-none bg-transparent p-0 focus-visible:ring-0 focus-visible:ring-offset-0\"\r\n                                  />\r\n                                  <Button\r\n                                    type=\"button\"\r\n                                    variant=\"ghost\"\r\n                                    size=\"icon\"\r\n                                    onClick={() => removeVariantValue(optionIndex, valueIndex)}\r\n                                    disabled={option.values.length <= 1}\r\n                                    className=\"h-5 w-5\"\r\n                                  >\r\n                                    <X className=\"h-3 w-3\" />\r\n                                  </Button>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-center\">\r\n                  <Button type=\"button\" onClick={generateVariants} className=\"w-full max-w-md\">\r\n                    Generate Variants\r\n                  </Button>\r\n                </div>\r\n\r\n                {form.watch(\"variants\")?.length > 0 && (\r\n                  <div>\r\n                    <h3 className=\"text-lg font-medium mb-4\">Variants</h3>\r\n                    <div className=\"border rounded-md overflow-x-auto\">\r\n                      <table className=\"w-full\">\r\n                        <thead className=\"bg-muted\">\r\n                          <tr>\r\n                            <th className=\"px-4 py-2 text-left font-medium text-sm\">Variant</th>\r\n                            <th className=\"px-4 py-2 text-left font-medium text-sm\">Price</th>\r\n                            <th className=\"px-4 py-2 text-left font-medium text-sm\">SKU</th>\r\n                            <th className=\"px-4 py-2 text-left font-medium text-sm\">Quantity</th>\r\n                            <th className=\"px-4 py-2 text-left font-medium text-sm\">Unit</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {form.watch(\"variants\")?.map((variant, index) => (\r\n                            <tr key={variant.id} className=\"border-t\">\r\n                              <td className=\"px-4 py-2\">{variant.name}</td>\r\n                              <td className=\"px-4 py-2\">\r\n                                <div className=\"relative w-32\">\r\n                                  <span className=\"absolute left-2 top-2\">NRs</span>\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    min=\"0\"\r\n                                    className=\"pl-10 h-8\"\r\n                                    value={variant.price}\r\n                                    onChange={(e) => {\r\n                                      const variants = [...(form.getValues(\"variants\") || [])]\r\n                                      variants[index].price = Number.parseFloat(e.target.value)\r\n                                      form.setValue(\"variants\", variants)\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-4 py-2\">\r\n                                <Input\r\n                                  className=\"w-32 h-8\"\r\n                                  value={variant.sku}\r\n                                  onChange={(e) => {\r\n                                    const variants = [...(form.getValues(\"variants\") || [])]\r\n                                    variants[index].sku = e.target.value\r\n                                    form.setValue(\"variants\", variants)\r\n                                  }}\r\n                                />\r\n                              </td>\r\n                              <td className=\"px-4 py-2\">\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  className=\"w-24 h-8\"\r\n                                  value={variant.quantity}\r\n                                  onChange={(e) => {\r\n                                    const variants = [...(form.getValues(\"variants\") || [])]\r\n                                    variants[index].quantity = Number.parseInt(e.target.value)\r\n                                    form.setValue(\"variants\", variants)\r\n                                  }}\r\n                                />\r\n                              </td>\r\n                              <td className=\"px-4 py-2\">\r\n                                <Input\r\n                                  className=\"w-24 h-8\"\r\n                                  value={variant.unit || \"\"}\r\n                                  placeholder=\"Unit\"\r\n                                  onChange={(e) => {\r\n                                    const variants = [...(form.getValues(\"variants\") || [])]\r\n                                    variants[index].unit = e.target.value\r\n                                    form.setValue(\"variants\", variants)\r\n                                  }}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </TabsContent>\r\n\r\n          {/* Shipping Tab */}\r\n          <TabsContent value=\"shipping\" className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"space-y-4\">\r\n                <FormField\r\n                  control={form.control as Control<ProductFormValues>}\r\n                  name=\"shipping.weight\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Weight</FormLabel>\r\n                      <FormControl>\r\n                        <div className=\"flex gap-2\">\r\n                          <Input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            className=\"flex-1\"\r\n                            {...field}\r\n                            value={field.value || \"\"}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value ? Number.parseFloat(e.target.value) : undefined\r\n                              field.onChange(value)\r\n                            }}\r\n                          />\r\n                          <Select\r\n                            value={form.watch(\"shipping.weightUnit\")}\r\n                            onValueChange={(value) =>\r\n                              form.setValue(\"shipping.weightUnit\", value as \"kg\" | \"g\" | \"lb\" | \"oz\")\r\n                            }\r\n                          >\r\n                            <SelectTrigger className=\"w-20\">\r\n                              <SelectValue placeholder=\"Unit\" />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              <SelectItem value=\"kg\">kg</SelectItem>\r\n                              <SelectItem value=\"g\">g</SelectItem>\r\n                              <SelectItem value=\"lb\">lb</SelectItem>\r\n                              <SelectItem value=\"oz\">oz</SelectItem>\r\n                            </SelectContent>\r\n                          </Select>\r\n                        </div>\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control as Control<ProductFormValues>}\r\n                  name=\"shipping.freeShipping\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\r\n                      <FormControl>\r\n                        <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                      </FormControl>\r\n                      <div className=\"space-y-1 leading-none\">\r\n                        <FormLabel>Free Shipping</FormLabel>\r\n                        <FormDescription>Offer free shipping for this product</FormDescription>\r\n                      </div>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control as Control<ProductFormValues>}\r\n                  name=\"shipping.shippingClass\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Shipping Class</FormLabel>\r\n                      <Select value={field.value} onValueChange={field.onChange}>\r\n                        <FormControl>\r\n                          <SelectTrigger>\r\n                            <SelectValue placeholder=\"Select shipping class\" />\r\n                          </SelectTrigger>\r\n                        </FormControl>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"standard\">Standard</SelectItem>\r\n                          <SelectItem value=\"express\">Express</SelectItem>\r\n                          <SelectItem value=\"overnight\">Overnight</SelectItem>\r\n                          <SelectItem value=\"international\">International</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"text-sm font-medium\">Dimensions</h3>\r\n                <div className=\"grid grid-cols-3 gap-2\">\r\n                  <FormField\r\n                    control={form.control as Control<ProductFormValues>}\r\n                    name=\"shipping.dimensions.length\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Length</FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            {...field}\r\n                            value={field.value || \"\"}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value ? Number.parseFloat(e.target.value) : undefined\r\n                              field.onChange(value)\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control as Control<ProductFormValues>}\r\n                    name=\"shipping.dimensions.width\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Width</FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            {...field}\r\n                            value={field.value || \"\"}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value ? Number.parseFloat(e.target.value) : undefined\r\n                              field.onChange(value)\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control as Control<ProductFormValues>}\r\n                    name=\"shipping.dimensions.height\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Height</FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            {...field}\r\n                            value={field.value || \"\"}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value ? Number.parseFloat(e.target.value) : undefined\r\n                              field.onChange(value)\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                <FormField\r\n                  control={form.control as Control<ProductFormValues>}\r\n                  name=\"shipping.dimensions.unit\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Dimension Unit</FormLabel>\r\n                      <Select\r\n                        value={field.value}\r\n                        onValueChange={(value) => field.onChange(value as \"cm\" | \"m\" | \"in\" | \"ft\")}\r\n                      >\r\n                        <FormControl>\r\n                          <SelectTrigger>\r\n                            <SelectValue placeholder=\"Select unit\" />\r\n                          </SelectTrigger>\r\n                        </FormControl>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"cm\">cm</SelectItem>\r\n                          <SelectItem value=\"m\">m</SelectItem>\r\n                          <SelectItem value=\"in\">in</SelectItem>\r\n                          <SelectItem value=\"ft\">ft</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <FormField\r\n              control={form.control as Control<ProductFormValues>}\r\n              name=\"shipping.shippingNote\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Shipping Note</FormLabel>\r\n                  <FormDescription>Special instructions for shipping (visible to customers)</FormDescription>\r\n                  <FormControl>\r\n                    <Textarea placeholder=\"Enter shipping notes\" className=\"resize-none\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </TabsContent>\r\n        </Tabs>\r\n\r\n        <div className=\"flex justify-between space-x-2\">\r\n          <Button type=\"button\" variant=\"outline\" onClick={handleBack} disabled={currentTabIndex === 0}>\r\n            Back\r\n          </Button>\r\n          <div className=\"flex gap-2\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={() => setIsAddOpen()}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"button\" onClick={handleNext} disabled={isSubmitting}>\r\n              {isSubmitting ? \"Saving...\" : isLastTab ? \"Save Product\" : \"Next\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5502, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/app/products/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation'; // App Router version\r\nimport { useUser } from '@/components/context/UserContext';\r\nimport { DashboardHeader } from \"@/components/Dashboard/dashboard-header\";\r\nimport { DashboardShell } from \"@/components/Dashboard/dashboard-shell\";\r\nimport ProductsTable from '@/components/Products/product-table';\r\n\r\nexport default function ProductsPage() {\r\n  // const { user, loading } = useUser();\r\n  // const router = useRouter();\r\n\r\n  // useEffect(() => {\r\n  //   if (!loading && user?.role !== 'admin') {\r\n  //     router.push('/admin/login');\r\n  //   }\r\n  // }, [loading, user, router]);\r\n\r\n  // if (loading || user?.role !== 'admin') {\r\n  //   return <p>Loading...</p>; // or a spinner\r\n  // }\r\n\r\n  return (\r\n    <DashboardShell>\r\n      <DashboardHeader heading=\"Products\" text=\"Manage your product inventory\" />\r\n      <ProductsTable />\r\n    </DashboardShell>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAKA;AACA;AACA;AAPA;;;;;AASe,SAAS;IACtB,uCAAuC;IACvC,8BAA8B;IAE9B,oBAAoB;IACpB,8CAA8C;IAC9C,mCAAmC;IACnC,MAAM;IACN,+BAA+B;IAE/B,2CAA2C;IAC3C,8CAA8C;IAC9C,IAAI;IAEJ,qBACE,8OAAC,qJAAA,CAAA,iBAAc;;0BACb,8OAAC,sJAAA,CAAA,kBAAe;gBAAC,SAAQ;gBAAW,MAAK;;;;;;0BACzC,8OAAC,kJAAA,CAAA,UAAa;;;;;;;;;;;AAGpB","debugId":null}}]
}