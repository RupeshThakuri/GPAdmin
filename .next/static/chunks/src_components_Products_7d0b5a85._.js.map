{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Products/delete-confirmation-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { AlertTriangle, Loader2 } from \"lucide-react\"\r\nimport { productService } from \"../../services/api-service\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\ninterface DeleteConfirmationDialogProps {\r\n  id: string\r\n  productName?: string\r\n  open: boolean\r\n  onOpenChange: (open: boolean) => void\r\n  onConfirm: () => Promise<void> | void\r\n  title?: string\r\n  description?: string\r\n}\r\n\r\nexport function DeleteConfirmationDialog({\r\n  id,\r\n  productName,\r\n  open,\r\n  onOpenChange,\r\n  onConfirm,\r\n  title = \"Confirm Deletion\",\r\n  description,\r\n}: Readonly<DeleteConfirmationDialogProps>) {\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const { toast } = useToast()\r\n\r\n  const defaultDescription = productName\r\n    ? `Are you sure you want to delete \"${productName}\"? This action cannot be undone.`\r\n    : \"Are you sure you want to delete this item? This action cannot be undone.\"\r\n\r\n  const handleConfirm = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      // Call the API to delete the product\r\n      await productService.deleteProduct(id)\r\n\r\n      // Call the parent's onConfirm to update the UI\r\n      await onConfirm()\r\n\r\n      // Close the dialog\r\n      onOpenChange(false)\r\n\r\n      toast({\r\n        title: \"Product Deleted\",\r\n        description: \"The product has been successfully deleted.\",\r\n      })\r\n    } catch (error: any) {\r\n      console.error(\"Deletion failed:\", error)\r\n\r\n      // Even if the API call fails with 404 (already deleted), update the UI\r\n      if (error.message?.includes(\"404\") || error.status === 404) {\r\n        await onConfirm() // Still update UI if product was already deleted\r\n        onOpenChange(false)\r\n        toast({\r\n          title: \"Product Deleted\",\r\n          description: \"The product has been removed.\",\r\n        })\r\n      } else {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to delete product.\",\r\n          variant: \"destructive\",\r\n        })\r\n      }\r\n    } finally {\r\n      setIsDeleting(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2 text-red-600\">\r\n            <AlertTriangle className=\"h-5 w-5\" />\r\n            {title}\r\n          </DialogTitle>\r\n          <DialogDescription>{description || defaultDescription}</DialogDescription>\r\n        </DialogHeader>\r\n\r\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-3 text-sm text-red-800\">\r\n          <p className=\"font-medium\">Warning:</p>\r\n          <p>This action cannot be undone. This will permanently delete the product and all associated data.</p>\r\n        </div>\r\n\r\n        <DialogFooter>\r\n          <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)} disabled={isDeleting}>\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"button\" variant=\"destructive\" onClick={handleConfirm} disabled={isDeleting}>\r\n            {isDeleting ? (\r\n              <>\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                Deleting...\r\n              </>\r\n            ) : (\r\n              \"Confirm Delete\"\r\n            )}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAQA;AACA;AAAA;AACA;AACA;;;AAdA;;;;;;;AA0BO,SAAS,yBAAyB,EACvC,EAAE,EACF,WAAW,EACX,IAAI,EACJ,YAAY,EACZ,SAAS,EACT,QAAQ,kBAAkB,EAC1B,WAAW,EAC6B;;IACxC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,qBAAqB,cACvB,CAAC,iCAAiC,EAAE,YAAY,gCAAgC,CAAC,GACjF;IAEJ,MAAM,gBAAgB;QACpB,cAAc;QACd,IAAI;YACF,qCAAqC;YACrC,MAAM,oIAAA,CAAA,iBAAc,CAAC,aAAa,CAAC;YAEnC,+CAA+C;YAC/C,MAAM;YAEN,mBAAmB;YACnB,aAAa;YAEb,MAAM;gBACJ,OAAO;gBACP,aAAa;YACf;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,oBAAoB;YAElC,uEAAuE;YACvE,IAAI,MAAM,OAAO,EAAE,SAAS,UAAU,MAAM,MAAM,KAAK,KAAK;gBAC1D,MAAM,YAAY,iDAAiD;;gBACnE,aAAa;gBACb,MAAM;oBACJ,OAAO;oBACP,aAAa;gBACf;YACF,OAAO;gBACL,MAAM;oBACJ,OAAO;oBACP,aAAa,MAAM,OAAO,IAAI;oBAC9B,SAAS;gBACX;YACF;QACF,SAAU;YACR,cAAc;QAChB;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6LAAC,2NAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;gCACxB;;;;;;;sCAEH,6LAAC,qIAAA,CAAA,oBAAiB;sCAAE,eAAe;;;;;;;;;;;;8BAGrC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;sCAAc;;;;;;sCAC3B,6LAAC;sCAAE;;;;;;;;;;;;8BAGL,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;4BAAU,SAAS,IAAM,aAAa;4BAAQ,UAAU;sCAAY;;;;;;sCAGlG,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;4BAAc,SAAS;4BAAe,UAAU;sCAC3E,2BACC;;kDACE,6LAAC,oNAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;oCAA8B;;+CAInD;;;;;;;;;;;;;;;;;;;;;;;AAOd;GAzFgB;;QAUI,0IAAA,CAAA,WAAQ;;;KAVZ","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Products/update-stock-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { useState } from \"react\"\r\nimport { productService } from \"../../services/api-service\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\nimport { Loader2, Package } from \"lucide-react\"\r\n\r\ninterface Product {\r\n  id: string\r\n  name: string\r\n  inventory: {\r\n    quantity: number\r\n    trackInventory: boolean\r\n    allowBackorders: boolean\r\n    lowStockThreshold: number\r\n  }\r\n}\r\n\r\ninterface UpdateStockDialogProps {\r\n  product: Product\r\n  open: boolean\r\n  onOpenChange: (open: boolean) => void\r\n  onUpdate: (updatedProduct: Product) => void\r\n}\r\n\r\nexport function UpdateStockDialog({ product, open, onOpenChange, onUpdate }: UpdateStockDialogProps) {\r\n  const [isUpdating, setIsUpdating] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    quantity: product.inventory.quantity,\r\n    trackInventory: product.inventory.trackInventory,\r\n    allowBackorders: product.inventory.allowBackorders,\r\n    lowStockThreshold: product.inventory.lowStockThreshold,\r\n  })\r\n  const { toast } = useToast()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsUpdating(true)\r\n\r\n    try {\r\n      // Use the dedicated stock update endpoint\r\n      const response = await productService.updateStock(product.id, {\r\n        quantity: formData.quantity,\r\n        trackInventory: formData.trackInventory,\r\n        allowBackorders: formData.allowBackorders,\r\n        lowStockThreshold: formData.lowStockThreshold,\r\n      })\r\n\r\n      // Update the product in the parent component\r\n      onUpdate({\r\n        ...product,\r\n        inventory: {\r\n          quantity: response.new_quantity || formData.quantity,\r\n          trackInventory: response.trackInventory || formData.trackInventory,\r\n          allowBackorders: response.allowBackorders || formData.allowBackorders,\r\n          lowStockThreshold: response.lowStockThreshold || formData.lowStockThreshold,\r\n        },\r\n      })\r\n\r\n      toast({\r\n        title: \"Stock Updated\",\r\n        description: \"Product inventory has been successfully updated.\",\r\n      })\r\n\r\n      onOpenChange(false)\r\n    } catch (error: any) {\r\n      console.error(\"Error updating stock:\", error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update stock. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsUpdating(false)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      quantity: product.inventory.quantity,\r\n      trackInventory: product.inventory.trackInventory,\r\n      allowBackorders: product.inventory.allowBackorders,\r\n      lowStockThreshold: product.inventory.lowStockThreshold,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            <Package className=\"h-5 w-5\" />\r\n            Update Stock\r\n          </DialogTitle>\r\n          <DialogDescription>Update inventory settings for \"{product.name}\"</DialogDescription>\r\n        </DialogHeader>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"quantity\">Current Stock Quantity</Label>\r\n            <Input\r\n              id=\"quantity\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              value={formData.quantity}\r\n              onChange={(e) => setFormData((prev) => ({ ...prev, quantity: Number(e.target.value) }))}\r\n              placeholder=\"Enter stock quantity\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"lowStockThreshold\">Low Stock Threshold</Label>\r\n            <Input\r\n              id=\"lowStockThreshold\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              value={formData.lowStockThreshold}\r\n              onChange={(e) => setFormData((prev) => ({ ...prev, lowStockThreshold: Number(e.target.value) }))}\r\n              placeholder=\"Enter low stock threshold\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Checkbox\r\n                id=\"trackInventory\"\r\n                checked={formData.trackInventory}\r\n                onCheckedChange={(checked) => setFormData((prev) => ({ ...prev, trackInventory: !!checked }))}\r\n              />\r\n              <Label htmlFor=\"trackInventory\" className=\"text-sm font-normal\">\r\n                Track inventory for this product\r\n              </Label>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Checkbox\r\n                id=\"allowBackorders\"\r\n                checked={formData.allowBackorders}\r\n                onCheckedChange={(checked) => setFormData((prev) => ({ ...prev, allowBackorders: !!checked }))}\r\n              />\r\n              <Label htmlFor=\"allowBackorders\" className=\"text-sm font-normal\">\r\n                Allow backorders when out of stock\r\n              </Label>\r\n            </div>\r\n          </div>\r\n\r\n          <DialogFooter className=\"gap-2\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={handleReset} disabled={isUpdating}>\r\n              Reset\r\n            </Button>\r\n            <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)} disabled={isUpdating}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" disabled={isUpdating}>\r\n              {isUpdating ? (\r\n                <>\r\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                  Updating...\r\n                </>\r\n              ) : (\r\n                \"Update Stock\"\r\n              )}\r\n            </Button>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///G:/vendor/src/components/Products/product-table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useCallback, useMemo } from \"react\"\r\nimport {\r\n  type ColumnDef,\r\n  type ColumnFiltersState,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n  type SortingState,\r\n} from \"@tanstack/react-table\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport {\r\n  MoreHorizontal,\r\n  Edit,\r\n  Trash2,\r\n  Eye,\r\n  Package,\r\n  Plus,\r\n  Search,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  ArrowUpDown,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  Download,\r\n  RefreshCw,\r\n} from \"lucide-react\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\nimport { productService } from \"../../services/api-service\"\r\n\r\nimport AddProductForm from \"./product-form\"\r\nimport EditProductForm from \"./edit-products\"\r\nimport { DeleteConfirmationDialog } from \"./delete-confirmation-dialog\"\r\nimport { ProductDetailsDialog } from \"./product-details-dialog\"\r\nimport { UpdateStockDialog } from \"./update-stock-dialog\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport type { ProductFormValues } from \"../../services/product-form-schema\"\r\n\r\ntype ProductStatus = \"draft\" | \"published\" | \"scheduled\"\r\n\r\ninterface Product extends ProductFormValues {\r\n  id: string\r\n  vendor_name?: string\r\n  created_at?: string\r\n  updated_at?: string\r\n  stock?: number // For backward compatibility\r\n}\r\n\r\nconst getStatusClass = (status: ProductStatus) => {\r\n  switch (status) {\r\n    case \"draft\":\r\n      return \"bg-yellow-100 text-yellow-800\"\r\n    case \"published\":\r\n      return \"bg-green-100 text-green-800\"\r\n    case \"scheduled\":\r\n      return \"bg-blue-100 text-blue-800\"\r\n    default:\r\n      return \"bg-gray-100 text-gray-800\"\r\n  }\r\n}\r\n\r\nconst getStockStatus = (quantity: number, lowThreshold = 10) => {\r\n  if (quantity === 0) return { status: \"out-of-stock\", label: \"Out of Stock\", color: \"bg-red-100 text-red-800\" }\r\n  if (quantity <= lowThreshold)\r\n    return { status: \"low-stock\", label: \"Low Stock\", color: \"bg-yellow-100 text-yellow-800\" }\r\n  return { status: \"in-stock\", label: \"In Stock\", color: \"bg-green-100 text-green-800\" }\r\n}\r\n\r\nexport default function ProductsTable() {\r\n  const [data, setData] = useState<Product[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([])\r\n  const [globalFilter, setGlobalFilter] = useState(\"\")\r\n  const [sorting, setSorting] = useState<SortingState>([])\r\n  const [selectedRows, setSelectedRows] = useState<string[]>([])\r\n  const { toast } = useToast()\r\n\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false)\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false)\r\n  const [updateStockDialogOpen, setUpdateStockDialogOpen] = useState(false)\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)\r\n  const [showAddForm, setShowAddForm] = useState(false)\r\n  const [showEditForm, setShowEditForm] = useState(false)\r\n\r\n  // for fetching product image\r\n  const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8000\"\r\n\r\n  // Function to get the full image URL\r\n  const getFullImageUrl = (imageUrl: string) => {\r\n    if (!imageUrl) return \"/placeholder.svg?height=40&width=40\"\r\n\r\n    // If it's already a full URL, return as is\r\n    if (imageUrl.startsWith(\"http://\") || imageUrl.startsWith(\"https://\")) {\r\n      return imageUrl\r\n    }\r\n\r\n    // If it's a relative URL starting with /media, prepend the API base URL\r\n    if (imageUrl.startsWith(\"/media/\")) {\r\n      return `${API_BASE_URL}${imageUrl}`\r\n    }\r\n\r\n    // If it's just a filename or relative path, construct the full URL\r\n    if (imageUrl.startsWith(\"media/\")) {\r\n      return `${API_BASE_URL}/${imageUrl}`\r\n    }\r\n\r\n    // Default fallback\r\n    return imageUrl\r\n  }\r\n\r\n  // Extract unique categories from products\r\n  const uniqueCategories = useMemo(() => {\r\n    const categories = new Set<string>()\r\n    data.forEach((product) => {\r\n      product.categories?.forEach((category) => {\r\n        categories.add(category)\r\n      })\r\n    })\r\n    return Array.from(categories)\r\n  }, [data])\r\n\r\n  //for fetching the whole product\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const products = await productService.getAllProducts()\r\n\r\n      // Ensure products is an array\r\n      if (!Array.isArray(products)) {\r\n        console.warn(\"API returned non-array data:\", products)\r\n        setData([])\r\n        return\r\n      }\r\n\r\n      const formattedProducts: Product[] = products.map((product: any) => ({\r\n        id: product.id,\r\n        name: product.name,\r\n        sku: product.sku,\r\n        vendor: product.vendor?.toString() || \"\",\r\n        vendor_name: product.vendor_name,\r\n        brand: product.brand,\r\n        categories: product.categories || [],\r\n        tags: product.tags || [],\r\n        shortDescription: product.short_description,\r\n        fullDescription: product.full_description,\r\n        features: product.features || [],\r\n        specifications: product.specifications || [],\r\n        price: Number(product.price),\r\n        compareAtPrice: product.compare_at_price ? Number(product.compare_at_price) : undefined,\r\n        discount: product.discount ? Number(product.discount) : undefined,\r\n        taxable: product.taxable || false,\r\n        taxCode: product.tax_code || \"\",\r\n        inventory: {\r\n          quantity: product.inventory?.quantity || 0,\r\n          trackInventory: product.inventory?.trackInventory ?? true,\r\n          allowBackorders: product.inventory?.allowBackorders ?? false,\r\n          lowStockThreshold: product.inventory?.lowStockThreshold || 5,\r\n        },\r\n        hasVariants: product.has_variants || false,\r\n        variantOptions: product.variant_options || [],\r\n        variants: product.variants || [],\r\n        shipping: {\r\n          weight: product.weight,\r\n          weightUnit: product.weight_unit || \"kg\",\r\n          dimensions: {\r\n            length: product.length,\r\n            width: product.width,\r\n            height: product.height,\r\n            unit: product.dimensions_unit || \"cm\",\r\n          },\r\n          shippingClass: product.shipping_class || \"\",\r\n          freeShipping: product.free_shipping || false,\r\n          shippingNote: product.shipping_note || \"\",\r\n        },\r\n        status: (product.status as ProductStatus) || \"draft\",\r\n        visibility: product.visibility || \"visible\",\r\n        images: product.images || [],\r\n        created_at: product.created_at,\r\n        updated_at: product.updated_at,\r\n        // Backward compatibility\r\n        stock: product.inventory?.quantity || 0,\r\n      }))\r\n\r\n      setData(formattedProducts)\r\n    } catch (error) {\r\n      console.error(\"Error fetching products:\", error)\r\n      toast({\r\n        title: \"Warning\",\r\n        description: \"Failed to load products. Please check your connection.\",\r\n        variant: \"destructive\",\r\n      })\r\n      // Don't clear existing data on error\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchProducts()\r\n  }, [])\r\n\r\n  const handleView = (product: Product) => {\r\n    setSelectedProduct(product)\r\n    setViewDialogOpen(true)\r\n  }\r\n\r\n  const handleEdit = (product: Product) => {\r\n    console.log(\"handleEdit called with product:\", product)\r\n\r\n    // Format the product data to match the form's expected structure\r\n    const formattedProduct = {\r\n      ...product,\r\n      vendor: product.vendor?.toString() || \"\",\r\n      categories: product.categories || [],\r\n      tags: product.tags || [],\r\n      shortDescription: product.shortDescription || \"\",\r\n      fullDescription: product.fullDescription || \"\",\r\n      features: product.features || [],\r\n      specifications: product.specifications || [],\r\n      compareAtPrice: product.compareAtPrice,\r\n      discount: product.discount,\r\n      taxCode: product.taxCode || \"\",\r\n      inventory: {\r\n        trackInventory: product.inventory?.trackInventory ?? true,\r\n        quantity: product.inventory?.quantity ?? 0,\r\n        allowBackorders: product.inventory?.allowBackorders ?? false,\r\n        lowStockThreshold: product.inventory?.lowStockThreshold ?? 5,\r\n      },\r\n      shipping: {\r\n        weight: product.shipping?.weight,\r\n        weightUnit: product.shipping?.weightUnit || \"kg\",\r\n        dimensions: {\r\n          length: product.shipping?.dimensions?.length,\r\n          width: product.shipping?.dimensions?.width,\r\n          height: product.shipping?.dimensions?.height,\r\n          unit: product.shipping?.dimensions?.unit || \"cm\",\r\n        },\r\n        shippingClass: product.shipping?.shippingClass || \"\",\r\n        freeShipping: product.shipping?.freeShipping ?? false,\r\n        shippingNote: product.shipping?.shippingNote || \"\",\r\n      },\r\n      hasVariants: product.hasVariants || false,\r\n      variantOptions: product.variantOptions || [],\r\n      variants: product.variants || [],\r\n      images:\r\n        product.images?.map((img: any) => ({\r\n          url: img.url,\r\n          alt: img.alt || \"\",\r\n          isPrimary: img.isPrimary || img.is_primary || false,\r\n          id: img.id,\r\n        })) || [],\r\n      primaryImageIndex: product.images?.findIndex((img: any) => img.isPrimary || img.is_primary) ?? undefined,\r\n      status: product.status || \"draft\",\r\n      visibility: product.visibility || \"visible\",\r\n      publishDate: product.publishDate || \"\",\r\n    }\r\n\r\n    console.log(\"handleEdit formatted product:\", formattedProduct)\r\n    setSelectedProduct(formattedProduct)\r\n    setShowEditForm(true)\r\n  }\r\n\r\n  const handleUpdateStock = (product: Product) => {\r\n    setSelectedProduct(product)\r\n    setUpdateStockDialogOpen(true)\r\n  }\r\n\r\n  const handleDeleteClick = (product: Product) => {\r\n    setSelectedProduct(product)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n\r\n  const handleDeleteSuccess = async () => {\r\n    if (selectedProduct) {\r\n      // Remove the product from the table immediately\r\n      setData((prevData) => prevData.filter((item) => item.id !== selectedProduct.id))\r\n      setSelectedRows((prevSelected) => prevSelected.filter((id) => id !== selectedProduct.id))\r\n      setSelectedProduct(null)\r\n    }\r\n    setDeleteDialogOpen(false)\r\n  }\r\n\r\n  const handleAddFormClose = (newProduct?: Product) => {\r\n    setShowAddForm(false)\r\n\r\n    // If a new product was added, refresh the product list\r\n    if (newProduct) {\r\n      fetchProducts()\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Product added successfully!\",\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEditFormClose = (updatedProduct?: Product) => {\r\n    setShowEditForm(false)\r\n    setSelectedProduct(null)\r\n\r\n    // If a product was updated, refresh the product list\r\n    if (updatedProduct) {\r\n      fetchProducts()\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Product updated successfully!\",\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleStockUpdate = (updatedProduct: Product) => {\r\n    // Update the product in the local state\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item.id === updatedProduct.id\r\n          ? {\r\n              ...item,\r\n              inventory: updatedProduct.inventory,\r\n              stock: updatedProduct.inventory?.quantity || 0,\r\n            }\r\n          : item,\r\n      ),\r\n    )\r\n    setUpdateStockDialogOpen(false)\r\n    setSelectedProduct(null)\r\n  }\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (selectedRows.length === 0) return\r\n\r\n    try {\r\n      setLoading(true)\r\n\r\n      // Delete each selected product\r\n      const deletePromises = selectedRows.map(async (id) => {\r\n        try {\r\n          await productService.deleteProduct(id)\r\n          return { id, success: true }\r\n        } catch (error) {\r\n          console.error(`Failed to delete product ${id}:`, error)\r\n          return { id, success: false, error }\r\n        }\r\n      })\r\n\r\n      const results = await Promise.all(deletePromises)\r\n      const successfulDeletes = results.filter((result) => result.success).map((result) => result.id)\r\n      const failedDeletes = results.filter((result) => !result.success)\r\n\r\n      // Update the UI with successfully deleted products\r\n      if (successfulDeletes.length > 0) {\r\n        setData((prevData) => prevData.filter((item) => !successfulDeletes.includes(item.id)))\r\n        setSelectedRows([])\r\n      }\r\n\r\n      // Show appropriate toast messages\r\n      if (failedDeletes.length === 0) {\r\n        toast({\r\n          title: \"Success\",\r\n          description: `${successfulDeletes.length} products deleted successfully`,\r\n        })\r\n      } else if (successfulDeletes.length === 0) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Failed to delete products. Please try again.\",\r\n          variant: \"destructive\",\r\n        })\r\n      } else {\r\n        toast({\r\n          title: \"Partial Success\",\r\n          description: `${successfulDeletes.length} products deleted, ${failedDeletes.length} failed`,\r\n          variant: \"destructive\",\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in bulk delete:\", error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to delete products. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleExportCSV = () => {\r\n    // Get the data to export (either selected rows or all filtered data)\r\n    const exportData =\r\n      selectedRows.length > 0\r\n        ? data.filter((item) => selectedRows.includes(item.id))\r\n        : table.getFilteredRowModel().rows.map((row) => row.original)\r\n\r\n    // Convert to CSV\r\n    const headers = [\"ID\", \"Name\", \"SKU\", \"Price\", \"Stock\", \"Status\", \"Categories\", \"Vendor\"]\r\n    const csvContent = [\r\n      headers.join(\",\"),\r\n      ...exportData.map((item) =>\r\n        [\r\n          item.id,\r\n          `\"${item.name.replace(/\"/g, '\"\"')}\"`, // Escape quotes in CSV\r\n          `\"${item.sku}\"`,\r\n          item.price,\r\n          item.inventory?.quantity || 0,\r\n          item.status,\r\n          `\"${item.categories?.join(\", \") || \"\"}\"`,\r\n          `\"${item.vendor_name || \"\"}\"`,\r\n        ].join(\",\"),\r\n      ),\r\n    ].join(\"\\n\")\r\n\r\n    // Create download link\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" })\r\n    const url = URL.createObjectURL(blob)\r\n    const link = document.createElement(\"a\")\r\n    link.setAttribute(\"href\", url)\r\n    link.setAttribute(\"download\", `products_export_${new Date().toISOString().slice(0, 10)}.csv`)\r\n    link.style.visibility = \"hidden\"\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n\r\n    toast({\r\n      title: \"Export Complete\",\r\n      description: `${exportData.length} products exported to CSV`,\r\n    })\r\n  }\r\n\r\n  // Define a global filter function that searches across multiple fields\r\n  const globalFilterFn = useCallback((row: any, columnId: string, filterValue: string) => {\r\n    const searchValue = filterValue.toLowerCase()\r\n\r\n    // Search in name\r\n    if (row.getValue(\"name\").toString().toLowerCase().includes(searchValue)) {\r\n      return true\r\n    }\r\n\r\n    // Search in SKU\r\n    if (row.getValue(\"sku\").toString().toLowerCase().includes(searchValue)) {\r\n      return true\r\n    }\r\n\r\n    // Search in categories\r\n    const categories: string[] = row.getValue(\"categories\") || []\r\n    if (categories.some((category) => category.toLowerCase().includes(searchValue))) {\r\n      return true\r\n    }\r\n\r\n    // Search in vendor name\r\n    const vendorName = row.getValue(\"vendor_name\")\r\n    if (vendorName && vendorName.toString().toLowerCase().includes(searchValue)) {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }, [])\r\n\r\n  // Define columns\r\n  const columns: ColumnDef<Product>[] = [\r\n    {\r\n      id: \"select\",\r\n      header: ({ table }) => (\r\n        <Checkbox\r\n          checked={\r\n            table.getFilteredRowModel().rows.length > 0 &&\r\n            table.getFilteredRowModel().rows.every((row) => selectedRows.includes(row.original.id))\r\n          }\r\n          onCheckedChange={(value) => {\r\n            if (value) {\r\n              setSelectedRows(table.getFilteredRowModel().rows.map((row) => row.original.id))\r\n            } else {\r\n              setSelectedRows([])\r\n            }\r\n          }}\r\n          aria-label=\"Select all\"\r\n        />\r\n      ),\r\n      cell: ({ row }) => (\r\n        <Checkbox\r\n          checked={selectedRows.includes(row.original.id)}\r\n          onCheckedChange={(value) => {\r\n            if (value) {\r\n              setSelectedRows([...selectedRows, row.original.id])\r\n            } else {\r\n              setSelectedRows(selectedRows.filter((id) => id !== row.original.id))\r\n            }\r\n          }}\r\n          aria-label=\"Select row\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      accessorKey: \"image\",\r\n      header: \"Image\",\r\n      cell: ({ row }) => {\r\n        const product = row.original\r\n        // Find primary image or first image\r\n        const primaryImage = product.images?.find((img) => img.isPrimary || img.is_primary)\r\n        const imageUrl = primaryImage?.url || product.images?.[0]?.url || product.image\r\n\r\n        return (\r\n          <div className=\"w-10 h-10 rounded-md overflow-hidden\">\r\n            {imageUrl ? (\r\n              <img\r\n                src={getFullImageUrl(imageUrl) || \"/placeholder.svg\"}\r\n                alt={product.name}\r\n                className=\"w-full h-full object-cover\"\r\n                onError={(e) => {\r\n                  const target = e.target as HTMLImageElement\r\n                  target.src = \"/placeholder.svg?height=40&width=40\"\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\r\n                <Package className=\"h-4 w-4 text-gray-400\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"name\",\r\n      header: ({ column }) => {\r\n        return (\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n            className=\"whitespace-nowrap\"\r\n          >\r\n            Name\r\n            {column.getIsSorted() === \"asc\" ? (\r\n              <ArrowUp className=\"ml-2 h-4 w-4\" />\r\n            ) : column.getIsSorted() === \"desc\" ? (\r\n              <ArrowDown className=\"ml-2 h-4 w-4\" />\r\n            ) : (\r\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n            )}\r\n          </Button>\r\n        )\r\n      },\r\n      cell: ({ row }) => {\r\n        return (\r\n          <div className=\"font-medium max-w-[200px] truncate\" title={row.getValue(\"name\")}>\r\n            {row.getValue(\"name\")}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"sku\",\r\n      header: ({ column }) => {\r\n        return (\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n            className=\"whitespace-nowrap\"\r\n          >\r\n            SKU\r\n            {column.getIsSorted() === \"asc\" ? (\r\n              <ArrowUp className=\"ml-2 h-4 w-4\" />\r\n            ) : column.getIsSorted() === \"desc\" ? (\r\n              <ArrowDown className=\"ml-2 h-4 w-4\" />\r\n            ) : (\r\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n            )}\r\n          </Button>\r\n        )\r\n      },\r\n      cell: ({ row }) => {\r\n        return (\r\n          <div className=\"max-w-[100px] truncate\" title={row.getValue(\"sku\")}>\r\n            {row.getValue(\"sku\")}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"price\",\r\n      header: ({ column }) => {\r\n        return (\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n            className=\"whitespace-nowrap\"\r\n          >\r\n            Price\r\n            {column.getIsSorted() === \"asc\" ? (\r\n              <ArrowUp className=\"ml-2 h-4 w-4\" />\r\n            ) : column.getIsSorted() === \"desc\" ? (\r\n              <ArrowDown className=\"ml-2 h-4 w-4\" />\r\n            ) : (\r\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n            )}\r\n          </Button>\r\n        )\r\n      },\r\n      cell: ({ row }) => {\r\n        const price = Number.parseFloat(row.getValue(\"price\"))\r\n        const formatted = new Intl.NumberFormat(\"en-US\", {\r\n          style: \"currency\",\r\n          currency: \"USD\",\r\n        }).format(price)\r\n        return <div>{formatted}</div>\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"inventory.quantity\",\r\n      id: \"stock\",\r\n      header: ({ column }) => {\r\n        return (\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n            className=\"whitespace-nowrap\"\r\n          >\r\n            Stock\r\n            {column.getIsSorted() === \"asc\" ? (\r\n              <ArrowUp className=\"ml-2 h-4 w-4\" />\r\n            ) : column.getIsSorted() === \"desc\" ? (\r\n              <ArrowDown className=\"ml-2 h-4 w-4\" />\r\n            ) : (\r\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n            )}\r\n          </Button>\r\n        )\r\n      },\r\n      cell: ({ row }) => {\r\n        const product = row.original\r\n        const stock = product.inventory?.quantity || 0\r\n        const lowThreshold = product.inventory?.lowStockThreshold || 10\r\n        const stockStatus = getStockStatus(stock, lowThreshold)\r\n\r\n        return (\r\n          <div className=\"flex items-center gap-2\">\r\n            <span>{stock}</span>\r\n            <Badge variant=\"outline\" className={`${stockStatus.color} text-xs`}>\r\n              {stockStatus.label}\r\n            </Badge>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"status\",\r\n      header: ({ column }) => {\r\n        return (\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n            className=\"whitespace-nowrap\"\r\n          >\r\n            Status\r\n            {column.getIsSorted() === \"asc\" ? (\r\n              <ArrowUp className=\"ml-2 h-4 w-4\" />\r\n            ) : column.getIsSorted() === \"desc\" ? (\r\n              <ArrowDown className=\"ml-2 h-4 w-4\" />\r\n            ) : (\r\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n            )}\r\n          </Button>\r\n        )\r\n      },\r\n      cell: ({ row }) => {\r\n        const status = row.getValue(\"status\") as ProductStatus\r\n        return (\r\n          <div className={`capitalize px-2 py-1 rounded-md text-xs font-medium ${getStatusClass(status)}`}>\r\n            {status}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"categories\",\r\n      header: \"Categories\",\r\n      cell: ({ row }) => {\r\n        const categories: string[] = row.getValue(\"categories\") || []\r\n        return (\r\n          <div className=\"flex flex-wrap gap-1 max-w-[150px]\">\r\n            {categories.slice(0, 2).map((category) => (\r\n              <span key={category} className=\"text-xs bg-gray-100 px-2 py-1 rounded truncate\">\r\n                {category}\r\n              </span>\r\n            ))}\r\n            {categories.length > 2 && <span className=\"text-xs text-gray-500\">+{categories.length - 2} more</span>}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      accessorKey: \"vendor_name\",\r\n      header: \"Vendor\",\r\n      cell: ({ row }) => {\r\n        return (\r\n          <div className=\"max-w-[120px] truncate\" title={row.getValue(\"vendor_name\")}>\r\n            {row.getValue(\"vendor_name\") || \"N/A\"}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      id: \"actions\",\r\n      header: \"Actions\",\r\n      cell: ({ row }) => {\r\n        const product = row.original\r\n        return (\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n                <MoreHorizontal className=\"h-4 w-4\" />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent align=\"end\">\r\n              <DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n              <DropdownMenuItem onClick={() => handleView(product)}>\r\n                <Eye className=\"mr-2 h-4 w-4\" />\r\n                View\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handleEdit(product)}>\r\n                <Edit className=\"mr-2 h-4 w-4\" />\r\n                Edit\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handleUpdateStock(product)}>\r\n                <Package className=\"mr-2 h-4 w-4\" />\r\n                Update Stock\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem className=\"text-red-600\" onClick={() => handleDeleteClick(product)}>\r\n                <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                Delete\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  // Update the table data source to use data directly instead of filteredData\r\n  const table = useReactTable({\r\n    data, // Use data directly instead of filteredData\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    globalFilterFn,\r\n    state: {\r\n      columnFilters,\r\n      globalFilter,\r\n      sorting,\r\n    },\r\n    onGlobalFilterChange: setGlobalFilter,\r\n    onSortingChange: setSorting,\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {showAddForm ? (\r\n        <AddProductForm onClose={handleAddFormClose} />\r\n      ) : showEditForm && selectedProduct ? (\r\n        <EditProductForm initialData={selectedProduct} onClose={handleEditFormClose} />\r\n      ) : (\r\n        <div className=\"w-full\">\r\n          {/* Search and action buttons */}\r\n          <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4 py-4\">\r\n            <div className=\"relative w-full max-w-sm\">\r\n              <Input\r\n                placeholder=\"Search by name, SKU, category, or vendor...\"\r\n                value={globalFilter}\r\n                onChange={(event) => setGlobalFilter(event.target.value)}\r\n                className=\"w-full pr-10\"\r\n              />\r\n              <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              {selectedRows.length > 0 && (\r\n                <Button variant=\"destructive\" size=\"sm\" onClick={handleBulkDelete} disabled={loading}>\r\n                  <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                  Delete ({selectedRows.length})\r\n                </Button>\r\n              )}\r\n\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleExportCSV} disabled={loading || data.length === 0}>\r\n                <Download className=\"mr-2 h-4 w-4\" />\r\n                Export\r\n              </Button>\r\n\r\n              <Button variant=\"outline\" size=\"sm\" onClick={fetchProducts} disabled={loading}>\r\n                <RefreshCw className={`mr-2 h-4 w-4 ${loading ? \"animate-spin\" : \"\"}`} />\r\n                Refresh\r\n              </Button>\r\n\r\n              <Button onClick={() => setShowAddForm(true)} className=\"whitespace-nowrap\">\r\n                <Plus className=\"mr-2 h-4 w-4\" />\r\n                Add Product\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"rounded-md border overflow-hidden relative\">\r\n            <div className=\"overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\">\r\n              <div className=\"min-w-full\">\r\n                <Table>\r\n                  {/* Table header */}\r\n                  <TableHeader>\r\n                    {table.getHeaderGroups().map((headerGroup) => (\r\n                      <TableRow key={headerGroup.id}>\r\n                        {headerGroup.headers.map((header) => (\r\n                          <TableHead key={header.id} className=\"whitespace-nowrap\">\r\n                            {flexRender(header.column.columnDef.header, header.getContext())}\r\n                          </TableHead>\r\n                        ))}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableHeader>\r\n\r\n                  {/* Table Body */}\r\n                  <TableBody>\r\n                    {loading ? (\r\n                      <TableRow>\r\n                        <TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n                          <div className=\"flex items-center justify-center\">\r\n                            <RefreshCw className=\"h-6 w-6 animate-spin mr-2\" />\r\n                            Loading products...\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ) : table.getRowModel().rows?.length ? (\r\n                      table.getRowModel().rows.map((row) => (\r\n                        <TableRow key={row.id} data-state={row.getIsSelected() && \"selected\"}>\r\n                          {row.getVisibleCells().map((cell) => (\r\n                            <TableCell key={cell.id} className=\"py-2\">\r\n                              {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n                          <div className=\"flex flex-col items-center justify-center\">\r\n                            <Package className=\"h-12 w-12 text-muted-foreground mb-2\" />\r\n                            <p className=\"text-muted-foreground\">No products found.</p>\r\n                            {globalFilter && (\r\n                              <p className=\"text-sm text-muted-foreground mt-1\">Try adjusting your search terms.</p>\r\n                            )}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n            <div className=\"absolute inset-y-0 left-0 bg-gradient-to-r from-white to-transparent w-8 pointer-events-none opacity-0 sm:opacity-100\"></div>\r\n            <div className=\"absolute inset-y-0 right-0 bg-gradient-to-l from-white to-transparent w-8 pointer-events-none opacity-0 sm:opacity-100\"></div>\r\n          </div>\r\n\r\n          {/* Pagination table footer */}\r\n          <div className=\"flex flex-col sm:flex-row items-center justify-between space-y-2 sm:space-y-0 py-4\">\r\n            <div className=\"text-sm text-muted-foreground\">\r\n              {table.getFilteredRowModel().rows.length} product(s) total\r\n              {selectedRows.length > 0 && ` • ${selectedRows.length} selected`}\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => table.previousPage()}\r\n                disabled={!table.getCanPreviousPage()}\r\n              >\r\n                <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n                Previous\r\n              </Button>\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                Page {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\r\n              </div>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={() => table.nextPage()} disabled={!table.getCanNextPage()}>\r\n                Next\r\n                <ChevronRight className=\"h-4 w-4 ml-1\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dialogs */}\r\n          {selectedProduct && (\r\n            <>\r\n              <ProductDetailsDialog\r\n                product={selectedProduct}\r\n                open={viewDialogOpen}\r\n                onOpenChange={setViewDialogOpen}\r\n                onEdit={() => {\r\n                  setViewDialogOpen(false)\r\n                  handleEdit(selectedProduct)\r\n                }}\r\n              />\r\n              <DeleteConfirmationDialog\r\n                id={selectedProduct.id}\r\n                productName={selectedProduct.name}\r\n                open={deleteDialogOpen}\r\n                onOpenChange={(open) => {\r\n                  setDeleteDialogOpen(open)\r\n                  if (!open) {\r\n                    setSelectedProduct(null)\r\n                  }\r\n                }}\r\n                onConfirm={handleDeleteSuccess}\r\n              />\r\n              <UpdateStockDialog\r\n                product={selectedProduct}\r\n                open={updateStockDialogOpen}\r\n                onOpenChange={(open) => {\r\n                  setUpdateStockDialogOpen(open)\r\n                  if (!open) {\r\n                    setSelectedProduct(null)\r\n                  }\r\n                }}\r\n                onUpdate={handleStockUpdate}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}